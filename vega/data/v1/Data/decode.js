/// autogenerated by protoc-plugin-js
const reader = require('protobuf-codec/decode/reader')
const { string, int64 } = require('protobuf-codec/decode/types')
const _vega_data_v1_Signer = require('./../Signer/decode.js')
const _vega_data_v1_Property = require('./../Property/decode.js')

exports.decode = function decode(
  buf,
  byteOffset = 0,
  byteLength = buf.byteLength
) {
  const field$signers = []
  const field$data = []
  const field$matchedSpecIds = []
  let field$broadcastAt = 0n
  const field$metaData = []
  let field$error = null
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$signers.push(_vega_data_v1_Signer.decode(data))
        break

      case 2:
        field$data.push(_vega_data_v1_Property.decode(data))
        break

      case 3:
        field$matchedSpecIds.push(string(data))
        break

      case 4:
        field$broadcastAt = int64(data)
        break

      case 5:
        field$metaData.push(_vega_data_v1_Property.decode(data))
        break

      case 6:
        field$error = string(data)
        break
    }
  }
  return {
    signers: field$signers,
    data: field$data,
    matchedSpecIds: field$matchedSpecIds,
    broadcastAt: field$broadcastAt,
    metaData: field$metaData,
    error: field$error
  }
}
