/// autogenerated by protoc-plugin-js
import type { LiteralUnion } from 'type-fest'

export const TYPE_UNSPECIFIED = 0
export const TYPE_EMPTY = 1
export const TYPE_INTEGER = 2
export const TYPE_STRING = 3
export const TYPE_BOOLEAN = 4
export const TYPE_DECIMAL = 5
export const TYPE_TIMESTAMP = 6

export type Values = 0 | 1 | 2 | 3 | 4 | 5 | 6
export type Names =
  | 'TYPE_UNSPECIFIED'
  | 'TYPE_EMPTY'
  | 'TYPE_INTEGER'
  | 'TYPE_STRING'
  | 'TYPE_BOOLEAN'
  | 'TYPE_DECIMAL'
  | 'TYPE_TIMESTAMP'

export const enum Type {
  TYPE_UNSPECIFIED = 0,
  TYPE_EMPTY = 1,
  TYPE_INTEGER = 2,
  TYPE_STRING = 3,
  TYPE_BOOLEAN = 4,
  TYPE_DECIMAL = 5,
  TYPE_TIMESTAMP = 6
}

declare const enumValues: Map<Names, Values>
declare const enumNames: Map<Values, Names>

export function encode(
  value: Values | Names,
  buf: Uint8Array,
  byteOffset: number
): Uint8Array

export function decode(varint: bigint): LiteralUnion<Names, number>

export function encodingLength(value: LiteralUnion<Values, number>): number

export function stringify(int: Values): LiteralUnion<Names, undefined>

export function parse(str: Names): LiteralUnion<Values, undefined>
