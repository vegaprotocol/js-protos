/// autogenerated by protoc-plugin-js
const reader = require('protobuf-codec/decode/reader')
const { string, uint64 } = require('protobuf-codec/decode/types')
const _vega_PriceLevel = require('./../PriceLevel/decode.js')

exports.decode = function decode(
  buf,
  byteOffset = 0,
  byteLength = buf.byteLength
) {
  let field$marketId = ''
  const field$buy = []
  const field$sell = []
  let field$sequenceNumber = 0n
  let field$previousSequenceNumber = 0n
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$marketId = string(data)
        break

      case 2:
        field$buy.push(_vega_PriceLevel.decode(data))
        break

      case 3:
        field$sell.push(_vega_PriceLevel.decode(data))
        break

      case 4:
        field$sequenceNumber = uint64(data)
        break

      case 5:
        field$previousSequenceNumber = uint64(data)
        break
    }
  }
  return {
    marketId: field$marketId,
    buy: field$buy,
    sell: field$sell,
    sequenceNumber: field$sequenceNumber,
    previousSequenceNumber: field$previousSequenceNumber
  }
}
