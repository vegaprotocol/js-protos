/// autogenerated by protoc-plugin-js
const Writer = require('protobuf-codec/encode/writer')
const { string, uint64, int64 } = require('protobuf-codec/encode/types')
const _vega_TradableInstrument = require('./../TradableInstrument/encode.js')
const _vega_Fees = require('./../Fees/encode.js')
const _vega_AuctionDuration = require('./../AuctionDuration/encode.js')
const _vega_PriceMonitoringSettings = require('./../PriceMonitoringSettings/encode.js')
const _vega_LiquidityMonitoringParameters = require('./../LiquidityMonitoringParameters/encode.js')
const _vega_Market_TradingMode = require('./TradingMode.js')
const _vega_Market_State = require('./State.js')
const _vega_MarketTimestamps = require('./../MarketTimestamps/encode.js')
const _vega_LiquiditySLAParameters = require('./../LiquiditySLAParameters/encode.js')

exports.encode = function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer()

  if (obj.id) writer.bytes(1, obj.id, string)
  if (obj.tradableInstrument)
    writer.bytes(2, _vega_TradableInstrument.encode(obj.tradableInstrument))
  if (obj.decimalPlaces) writer.varint(3, obj.decimalPlaces, uint64)
  if (obj.fees) writer.bytes(4, _vega_Fees.encode(obj.fees))
  if (obj.openingAuction)
    writer.bytes(5, _vega_AuctionDuration.encode(obj.openingAuction))
  if (obj.priceMonitoringSettings)
    writer.bytes(
      6,
      _vega_PriceMonitoringSettings.encode(obj.priceMonitoringSettings)
    )
  if (obj.liquidityMonitoringParameters)
    writer.bytes(
      7,
      _vega_LiquidityMonitoringParameters.encode(
        obj.liquidityMonitoringParameters
      )
    )
  if (obj.tradingMode)
    writer.varint(8, obj.tradingMode, _vega_Market_TradingMode)
  if (obj.state) writer.varint(9, obj.state, _vega_Market_State)
  if (obj.marketTimestamps)
    writer.bytes(10, _vega_MarketTimestamps.encode(obj.marketTimestamps))
  if (obj.positionDecimalPlaces)
    writer.varint(11, obj.positionDecimalPlaces, int64)
  if (obj.lpPriceRange) writer.bytes(12, obj.lpPriceRange, string)
  if (obj.linearSlippageFactor)
    writer.bytes(13, obj.linearSlippageFactor, string)
  if (obj.quadraticSlippageFactor)
    writer.bytes(14, obj.quadraticSlippageFactor, string)
  if (obj.parentMarketId) writer.bytes(15, obj.parentMarketId, string)
  if (obj.insurancePoolFraction)
    writer.bytes(16, obj.insurancePoolFraction, string)
  if (obj.successorMarketId) writer.bytes(17, obj.successorMarketId, string)
  if (obj.liquiditySlaParams)
    writer.bytes(
      18,
      _vega_LiquiditySLAParameters.encode(obj.liquiditySlaParams)
    )

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }
