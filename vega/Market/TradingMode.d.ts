/// autogenerated by protoc-plugin-js
import type { LiteralUnion } from 'type-fest'

export const TRADING_MODE_UNSPECIFIED = 0
export const TRADING_MODE_CONTINUOUS = 1
export const TRADING_MODE_BATCH_AUCTION = 2
export const TRADING_MODE_OPENING_AUCTION = 3
export const TRADING_MODE_MONITORING_AUCTION = 4
export const TRADING_MODE_NO_TRADING = 5
export const TRADING_MODE_SUSPENDED_VIA_GOVERNANCE = 6
export const TRADING_MODE_LONG_BLOCK_AUCTION = 7

export type Values = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7
export type Names =
  | 'TRADING_MODE_UNSPECIFIED'
  | 'TRADING_MODE_CONTINUOUS'
  | 'TRADING_MODE_BATCH_AUCTION'
  | 'TRADING_MODE_OPENING_AUCTION'
  | 'TRADING_MODE_MONITORING_AUCTION'
  | 'TRADING_MODE_NO_TRADING'
  | 'TRADING_MODE_SUSPENDED_VIA_GOVERNANCE'
  | 'TRADING_MODE_LONG_BLOCK_AUCTION'

export const enum TradingMode {
  TRADING_MODE_UNSPECIFIED = 0,
  TRADING_MODE_CONTINUOUS = 1,
  TRADING_MODE_BATCH_AUCTION = 2,
  TRADING_MODE_OPENING_AUCTION = 3,
  TRADING_MODE_MONITORING_AUCTION = 4,
  TRADING_MODE_NO_TRADING = 5,
  TRADING_MODE_SUSPENDED_VIA_GOVERNANCE = 6,
  TRADING_MODE_LONG_BLOCK_AUCTION = 7
}

declare const enumValues: Map<Names, Values>
declare const enumNames: Map<Values, Names>

export function encode(
  value: Values | Names,
  buf: Uint8Array,
  byteOffset: number
): Uint8Array

export function decode(varint: bigint): LiteralUnion<Names, number>

export function encodingLength(value: LiteralUnion<Values, number>): number

export function stringify(int: Values): LiteralUnion<Names, undefined>

export function parse(str: Names): LiteralUnion<Values, undefined>
