/// autogenerated by protoc-plugin-js
const reader = require('protobuf-codec/decode/reader')
const { uint64 } = require('protobuf-codec/decode/types')
const _vega_StakeDeposited = require('./../StakeDeposited/decode.js')
const _vega_StakeRemoved = require('./../StakeRemoved/decode.js')
const _vega_StakeTotalSupply = require('./../StakeTotalSupply/decode.js')

exports.decode = function decode(
  buf,
  byteOffset = 0,
  byteLength = buf.byteLength
) {
  let field$index = 0n
  let field$block = 0n
  let field$action = null
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$index = uint64(data)
        break

      case 2:
        field$block = uint64(data)
        break

      case 1001:
        field$action = { stakeDeposited: _vega_StakeDeposited.decode(data) }
        break

      case 1002:
        field$action = { stakeRemoved: _vega_StakeRemoved.decode(data) }
        break

      case 1003:
        field$action = { totalSupply: _vega_StakeTotalSupply.decode(data) }
        break
    }
  }
  return { index: field$index, block: field$block, action: field$action }
}
