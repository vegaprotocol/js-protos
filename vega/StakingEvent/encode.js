/// autogenerated by protoc-plugin-js
const Writer = require('protobuf-codec/encode/writer')
const { uint64 } = require('protobuf-codec/encode/types')
const _vega_StakeDeposited = require('./../StakeDeposited/encode.js')
const _vega_StakeRemoved = require('./../StakeRemoved/encode.js')
const _vega_StakeTotalSupply = require('./../StakeTotalSupply/encode.js')

exports.encode = function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer()

  if (obj.index) writer.varint(1, obj.index, uint64)
  if (obj.block) writer.varint(2, obj.block, uint64)

  if (obj.action?.stakeDeposited ?? obj.stakeDeposited)
    writer.bytes(
      1001,
      _vega_StakeDeposited.encode(
        obj.action?.stakeDeposited ?? obj.stakeDeposited
      )
    )
  if (obj.action?.stakeRemoved ?? obj.stakeRemoved)
    writer.bytes(
      1002,
      _vega_StakeRemoved.encode(obj.action?.stakeRemoved ?? obj.stakeRemoved)
    )
  if (obj.action?.totalSupply ?? obj.totalSupply)
    writer.bytes(
      1003,
      _vega_StakeTotalSupply.encode(obj.action?.totalSupply ?? obj.totalSupply)
    )

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }
