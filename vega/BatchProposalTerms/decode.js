/// autogenerated by protoc-plugin-js
const reader = require('protobuf-codec/decode/reader')
const { int64 } = require('protobuf-codec/decode/types')
const _vega_ProposalParameters = require('./../ProposalParameters/decode.js')
const _vega_BatchProposalTermsChange = require('./../BatchProposalTermsChange/decode.js')

exports.decode = function decode(
  buf,
  byteOffset = 0,
  byteLength = buf.byteLength
) {
  let field$closingTimestamp = 0n
  let field$proposalParams = {}
  const field$changes = []
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$closingTimestamp = int64(data)
        break

      case 2:
        field$proposalParams = _vega_ProposalParameters.decode(data)
        break

      case 3:
        field$changes.push(_vega_BatchProposalTermsChange.decode(data))
        break
    }
  }
  return {
    closingTimestamp: field$closingTimestamp,
    proposalParams: field$proposalParams,
    changes: field$changes
  }
}
