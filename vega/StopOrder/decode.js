/// autogenerated by protoc-plugin-js
const reader = require('protobuf-codec/decode/reader')
const { string, int64 } = require('protobuf-codec/decode/types')
const _vega_StopOrder_ExpiryStrategy = require('./ExpiryStrategy.js')
const _vega_StopOrder_TriggerDirection = require('./TriggerDirection.js')
const _vega_StopOrder_Status = require('./Status.js')
const _vega_StopOrder_RejectionReason = require('./RejectionReason.js')
const _vega_StopOrder_SizeOverrideSetting = require('./SizeOverrideSetting.js')
const _vega_StopOrder_SizeOverrideValue = require('./SizeOverrideValue/decode.js')

exports.decode = function decode(
  buf,
  byteOffset = 0,
  byteLength = buf.byteLength
) {
  let field$id = ''
  let field$ocoLinkId = null
  let field$expiresAt = null
  let field$expiryStrategy = null
  let field$triggerDirection = _vega_StopOrder_TriggerDirection.decode(0)
  let field$status = _vega_StopOrder_Status.decode(0)
  let field$createdAt = 0n
  let field$updatedAt = null
  let field$orderId = ''
  let field$partyId = ''
  let field$marketId = ''
  let field$rejectionReason = null
  let field$sizeOverrideSetting = _vega_StopOrder_SizeOverrideSetting.decode(0)
  let field$sizeOverrideValue = null
  let field$trigger = null
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$id = string(data)
        break

      case 2:
        field$ocoLinkId = string(data)
        break

      case 3:
        field$expiresAt = int64(data)
        break

      case 4:
        field$expiryStrategy = _vega_StopOrder_ExpiryStrategy.decode(data)
        break

      case 5:
        field$triggerDirection = _vega_StopOrder_TriggerDirection.decode(data)
        break

      case 6:
        field$status = _vega_StopOrder_Status.decode(data)
        break

      case 7:
        field$createdAt = int64(data)
        break

      case 8:
        field$updatedAt = int64(data)
        break

      case 9:
        field$orderId = string(data)
        break

      case 10:
        field$partyId = string(data)
        break

      case 11:
        field$marketId = string(data)
        break

      case 12:
        field$rejectionReason = _vega_StopOrder_RejectionReason.decode(data)
        break

      case 13:
        field$sizeOverrideSetting =
          _vega_StopOrder_SizeOverrideSetting.decode(data)
        break

      case 14:
        field$sizeOverrideValue = _vega_StopOrder_SizeOverrideValue.decode(data)
        break

      case 100:
        field$trigger = { price: string(data) }
        break

      case 101:
        field$trigger = { trailingPercentOffset: string(data) }
        break
    }
  }
  return {
    id: field$id,
    ocoLinkId: field$ocoLinkId,
    expiresAt: field$expiresAt,
    expiryStrategy: field$expiryStrategy,
    triggerDirection: field$triggerDirection,
    status: field$status,
    createdAt: field$createdAt,
    updatedAt: field$updatedAt,
    orderId: field$orderId,
    partyId: field$partyId,
    marketId: field$marketId,
    rejectionReason: field$rejectionReason,
    sizeOverrideSetting: field$sizeOverrideSetting,
    sizeOverrideValue: field$sizeOverrideValue,
    trigger: field$trigger
  }
}
