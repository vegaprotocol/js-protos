/// autogenerated by protoc-plugin-js
const Writer = require('protobuf-codec/encode/writer')
const { string, int64 } = require('protobuf-codec/encode/types')
const _vega_DataSourceDefinition = require('./../DataSourceDefinition/encode.js')
const _vega_DataSourceSpec_Status = require('./Status.js')

exports.encode = function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer()

  if (obj.id) writer.bytes(1, obj.id, string)
  if (obj.createdAt) writer.varint(2, obj.createdAt, int64)
  if (obj.updatedAt) writer.varint(3, obj.updatedAt, int64)
  if (obj.data) writer.bytes(4, _vega_DataSourceDefinition.encode(obj.data))
  if (obj.status) writer.varint(5, obj.status, _vega_DataSourceSpec_Status)

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }
