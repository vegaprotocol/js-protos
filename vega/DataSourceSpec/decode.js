/// autogenerated by protoc-plugin-js
const reader = require('protobuf-codec/decode/reader')
const { string, int64 } = require('protobuf-codec/decode/types')
const _vega_DataSourceDefinition = require('./../DataSourceDefinition/decode.js')
const _vega_DataSourceSpec_Status = require('./Status.js')

exports.decode = function decode(
  buf,
  byteOffset = 0,
  byteLength = buf.byteLength
) {
  let field$id = ''
  let field$createdAt = 0n
  let field$updatedAt = 0n
  let field$data = {}
  let field$status = _vega_DataSourceSpec_Status.decode(0)
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$id = string(data)
        break

      case 2:
        field$createdAt = int64(data)
        break

      case 3:
        field$updatedAt = int64(data)
        break

      case 4:
        field$data = _vega_DataSourceDefinition.decode(data)
        break

      case 5:
        field$status = _vega_DataSourceSpec_Status.decode(data)
        break
    }
  }
  return {
    id: field$id,
    createdAt: field$createdAt,
    updatedAt: field$updatedAt,
    data: field$data,
    status: field$status
  }
}
