/// autogenerated by protoc-plugin-js
const reader = require('protobuf-codec/decode/reader')
const { string, uint32, float } = require('protobuf-codec/decode/types')
const _vega_NodeSet = require('./../NodeSet/decode.js')

exports.decode = function decode(
  buf,
  byteOffset = 0,
  byteLength = buf.byteLength
) {
  let field$stakedTotal = ''
  let field$totalNodes = 0
  let field$inactiveNodes = 0
  let field$tendermintNodes = {}
  let field$ersatzNodes = {}
  let field$pendingNodes = {}
  let field$uptime = 0
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$stakedTotal = string(data)
        break

      case 2:
        field$totalNodes = uint32(data)
        break

      case 3:
        field$inactiveNodes = uint32(data)
        break

      case 4:
        field$tendermintNodes = _vega_NodeSet.decode(data)
        break

      case 5:
        field$ersatzNodes = _vega_NodeSet.decode(data)
        break

      case 6:
        field$pendingNodes = _vega_NodeSet.decode(data)
        break

      case 7:
        field$uptime = float(data)
        break
    }
  }
  return {
    stakedTotal: field$stakedTotal,
    totalNodes: field$totalNodes,
    inactiveNodes: field$inactiveNodes,
    tendermintNodes: field$tendermintNodes,
    ersatzNodes: field$ersatzNodes,
    pendingNodes: field$pendingNodes,
    uptime: field$uptime
  }
}
