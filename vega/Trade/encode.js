/// autogenerated by protoc-plugin-js
const Writer = require('protobuf-codec/encode/writer')
const { string, uint64, int64 } = require('protobuf-codec/encode/types')
const _vega_Side = require('./../Side.js')
const _vega_Trade_Type = require('./Type.js')
const _vega_Fee = require('./../Fee/encode.js')

exports.encode = function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer()

  if (obj.id) writer.bytes(1, obj.id, string)
  if (obj.marketId) writer.bytes(2, obj.marketId, string)
  if (obj.price) writer.bytes(3, obj.price, string)
  if (obj.size) writer.varint(4, obj.size, uint64)
  if (obj.buyer) writer.bytes(5, obj.buyer, string)
  if (obj.seller) writer.bytes(6, obj.seller, string)
  if (obj.aggressor) writer.varint(7, obj.aggressor, _vega_Side)
  if (obj.buyOrder) writer.bytes(8, obj.buyOrder, string)
  if (obj.sellOrder) writer.bytes(9, obj.sellOrder, string)
  if (obj.timestamp) writer.varint(10, obj.timestamp, int64)
  if (obj.type) writer.varint(11, obj.type, _vega_Trade_Type)
  if (obj.buyerFee) writer.bytes(12, _vega_Fee.encode(obj.buyerFee))
  if (obj.sellerFee) writer.bytes(13, _vega_Fee.encode(obj.sellerFee))
  if (obj.buyerAuctionBatch) writer.varint(14, obj.buyerAuctionBatch, uint64)
  if (obj.sellerAuctionBatch) writer.varint(15, obj.sellerAuctionBatch, uint64)
  if (obj.assetPrice) writer.bytes(16, obj.assetPrice, string)

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }
