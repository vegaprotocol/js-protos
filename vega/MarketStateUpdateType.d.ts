/// autogenerated by protoc-plugin-js
import type { LiteralUnion } from 'type-fest'

export const MARKET_STATE_UPDATE_TYPE_UNSPECIFIED = 0
export const MARKET_STATE_UPDATE_TYPE_TERMINATE = 1
export const MARKET_STATE_UPDATE_TYPE_SUSPEND = 2
export const MARKET_STATE_UPDATE_TYPE_RESUME = 3

export type Values = 0 | 1 | 2 | 3
export type Names =
  | 'MARKET_STATE_UPDATE_TYPE_UNSPECIFIED'
  | 'MARKET_STATE_UPDATE_TYPE_TERMINATE'
  | 'MARKET_STATE_UPDATE_TYPE_SUSPEND'
  | 'MARKET_STATE_UPDATE_TYPE_RESUME'

export const enum MarketStateUpdateType {
  MARKET_STATE_UPDATE_TYPE_UNSPECIFIED = 0,
  MARKET_STATE_UPDATE_TYPE_TERMINATE = 1,
  MARKET_STATE_UPDATE_TYPE_SUSPEND = 2,
  MARKET_STATE_UPDATE_TYPE_RESUME = 3
}

declare const enumValues: Map<Names, Values>
declare const enumNames: Map<Values, Names>

export function encode(
  value: Values | Names,
  buf: Uint8Array,
  byteOffset: number
): Uint8Array

export function decode(varint: bigint): LiteralUnion<Names, number>

export function encodingLength(value: LiteralUnion<Values, number>): number

export function stringify(int: Values): LiteralUnion<Names, undefined>

export function parse(str: Names): LiteralUnion<Values, undefined>
