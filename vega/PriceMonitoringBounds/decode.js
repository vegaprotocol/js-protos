/// autogenerated by protoc-plugin-js
const reader = require('protobuf-codec/decode/reader')
const { string, bool } = require('protobuf-codec/decode/types')
const _vega_PriceMonitoringTrigger = require('./../PriceMonitoringTrigger/decode.js')

exports.decode = function decode(
  buf,
  byteOffset = 0,
  byteLength = buf.byteLength
) {
  let field$minValidPrice = ''
  let field$maxValidPrice = ''
  let field$trigger = {}
  let field$referencePrice = ''
  let field$active = false
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$minValidPrice = string(data)
        break

      case 2:
        field$maxValidPrice = string(data)
        break

      case 3:
        field$trigger = _vega_PriceMonitoringTrigger.decode(data)
        break

      case 4:
        field$referencePrice = string(data)
        break

      case 5:
        field$active = bool(data)
        break
    }
  }
  return {
    minValidPrice: field$minValidPrice,
    maxValidPrice: field$maxValidPrice,
    trigger: field$trigger,
    referencePrice: field$referencePrice,
    active: field$active
  }
}
