/// autogenerated by protoc-plugin-js
const Writer = require('protobuf-codec/encode/writer')
const { string, int64 } = require('protobuf-codec/encode/types')
const _vega_Vote_Value = require('./Value.js')
const _vega_VoteELSPair = require('./../VoteELSPair/encode.js')

exports.encode = function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer()

  if (obj.partyId) writer.bytes(1, obj.partyId, string)
  if (obj.value) writer.varint(2, obj.value, _vega_Vote_Value)
  if (obj.proposalId) writer.bytes(3, obj.proposalId, string)
  if (obj.timestamp) writer.varint(4, obj.timestamp, int64)
  if (obj.totalGovernanceTokenBalance)
    writer.bytes(5, obj.totalGovernanceTokenBalance, string)
  if (obj.totalGovernanceTokenWeight)
    writer.bytes(6, obj.totalGovernanceTokenWeight, string)
  if (obj.totalEquityLikeShareWeight)
    writer.bytes(7, obj.totalEquityLikeShareWeight, string)
  if (obj.elsPerMarket?.length)
    obj.elsPerMarket.forEach((v) =>
      writer.bytes(8, _vega_VoteELSPair.encode(v))
    )

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }
