/// autogenerated by protoc-plugin-js
const reader = require('protobuf-codec/decode/reader')
const { string } = require('protobuf-codec/decode/types')
const _vega_DataSourceSpec = require('./../DataSourceSpec/decode.js')
const _vega_DataSourceSpecToFutureBinding = require('./../DataSourceSpecToFutureBinding/decode.js')
const _vega_FutureCap = require('./../FutureCap/decode.js')

exports.decode = function decode(
  buf,
  byteOffset = 0,
  byteLength = buf.byteLength
) {
  let field$settlementAsset = ''
  let field$quoteName = ''
  let field$dataSourceSpecForSettlementData = {}
  let field$dataSourceSpecForTradingTermination = {}
  let field$dataSourceSpecBinding = {}
  let field$cap = null
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$settlementAsset = string(data)
        break

      case 2:
        field$quoteName = string(data)
        break

      case 3:
        field$dataSourceSpecForSettlementData =
          _vega_DataSourceSpec.decode(data)
        break

      case 4:
        field$dataSourceSpecForTradingTermination =
          _vega_DataSourceSpec.decode(data)
        break

      case 5:
        field$dataSourceSpecBinding =
          _vega_DataSourceSpecToFutureBinding.decode(data)
        break

      case 6:
        field$cap = _vega_FutureCap.decode(data)
        break
    }
  }
  return {
    settlementAsset: field$settlementAsset,
    quoteName: field$quoteName,
    dataSourceSpecForSettlementData: field$dataSourceSpecForSettlementData,
    dataSourceSpecForTradingTermination:
      field$dataSourceSpecForTradingTermination,
    dataSourceSpecBinding: field$dataSourceSpecBinding,
    cap: field$cap
  }
}
