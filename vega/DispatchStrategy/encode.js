/// autogenerated by protoc-plugin-js
const Writer = require('protobuf-codec/encode/writer')
const { string, uint64 } = require('protobuf-codec/encode/types')
const _vega_DispatchMetric = require('./../DispatchMetric.js')
const _vega_EntityScope = require('./../EntityScope.js')
const _vega_IndividualScope = require('./../IndividualScope.js')
const _vega_DistributionStrategy = require('./../DistributionStrategy.js')
const _vega_Rank = require('./../Rank/encode.js')

exports.encode = function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer()

  if (obj.assetForMetric) writer.bytes(1, obj.assetForMetric, string)
  if (obj.metric) writer.varint(2, obj.metric, _vega_DispatchMetric)
  if (obj.markets?.length)
    obj.markets.forEach((v) => writer.bytes(3, v, string))
  if (obj.entityScope) writer.varint(4, obj.entityScope, _vega_EntityScope)
  if (obj.individualScope)
    writer.varint(5, obj.individualScope, _vega_IndividualScope)
  if (obj.teamScope?.length)
    obj.teamScope.forEach((v) => writer.bytes(6, v, string))
  if (obj.nTopPerformers) writer.bytes(7, obj.nTopPerformers, string)
  if (obj.stakingRequirement) writer.bytes(8, obj.stakingRequirement, string)
  if (obj.notionalTimeWeightedAveragePositionRequirement)
    writer.bytes(9, obj.notionalTimeWeightedAveragePositionRequirement, string)
  if (obj.windowLength) writer.varint(10, obj.windowLength, uint64)
  if (obj.lockPeriod) writer.varint(11, obj.lockPeriod, uint64)
  if (obj.distributionStrategy)
    writer.varint(12, obj.distributionStrategy, _vega_DistributionStrategy)
  if (obj.rankTable?.length)
    obj.rankTable.forEach((v) => writer.bytes(13, _vega_Rank.encode(v)))

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }
