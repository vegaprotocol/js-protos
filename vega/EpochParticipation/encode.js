/// autogenerated by protoc-plugin-js
const Writer = require('protobuf-codec/encode/writer')
const { uint64, double } = require('protobuf-codec/encode/types')
const _vega_Epoch = require('./../Epoch/encode.js')

exports.encode = function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer()

  if (obj.epoch) writer.bytes(1, _vega_Epoch.encode(obj.epoch))
  if (obj.offline) writer.varint(2, obj.offline, uint64)
  if (obj.online) writer.varint(3, obj.online, uint64)
  if (obj.totalRewards) writer.fixed64(4, obj.totalRewards, double)

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }
