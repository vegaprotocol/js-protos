/// autogenerated by protoc-plugin-js
const reader = require('protobuf-codec/decode/reader')
const { double } = require('protobuf-codec/decode/types')
const _vega_LogNormalModelParams = require('./../LogNormalModelParams/decode.js')

exports.decode = function decode(
  buf,
  byteOffset = 0,
  byteLength = buf.byteLength
) {
  let field$riskAversionParameter = 0
  let field$tau = 0
  let field$params = {}
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$riskAversionParameter = double(data)
        break

      case 2:
        field$tau = double(data)
        break

      case 3:
        field$params = _vega_LogNormalModelParams.decode(data)
        break
    }
  }
  return {
    riskAversionParameter: field$riskAversionParameter,
    tau: field$tau,
    params: field$params
  }
}
