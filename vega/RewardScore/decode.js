/// autogenerated by protoc-plugin-js
const reader = require('protobuf-codec/decode/reader')
const { string } = require('protobuf-codec/decode/types')
const _vega_ValidatorNodeStatus = require('./../ValidatorNodeStatus.js')

exports.decode = function decode(
  buf,
  byteOffset = 0,
  byteLength = buf.byteLength
) {
  let field$rawValidatorScore = ''
  let field$performanceScore = ''
  let field$multisigScore = ''
  let field$validatorScore = ''
  let field$normalisedScore = ''
  let field$validatorStatus = _vega_ValidatorNodeStatus.decode(0)
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$rawValidatorScore = string(data)
        break

      case 2:
        field$performanceScore = string(data)
        break

      case 3:
        field$multisigScore = string(data)
        break

      case 4:
        field$validatorScore = string(data)
        break

      case 5:
        field$normalisedScore = string(data)
        break

      case 6:
        field$validatorStatus = _vega_ValidatorNodeStatus.decode(data)
        break
    }
  }
  return {
    rawValidatorScore: field$rawValidatorScore,
    performanceScore: field$performanceScore,
    multisigScore: field$multisigScore,
    validatorScore: field$validatorScore,
    normalisedScore: field$normalisedScore,
    validatorStatus: field$validatorStatus
  }
}
