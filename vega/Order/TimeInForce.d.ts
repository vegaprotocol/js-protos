/// autogenerated by protoc-plugin-js
import type { LiteralUnion } from 'type-fest'

export const TIME_IN_FORCE_UNSPECIFIED = 0
export const TIME_IN_FORCE_GTC = 1
export const TIME_IN_FORCE_GTT = 2
export const TIME_IN_FORCE_IOC = 3
export const TIME_IN_FORCE_FOK = 4
export const TIME_IN_FORCE_GFA = 5
export const TIME_IN_FORCE_GFN = 6

export type Values = 0 | 1 | 2 | 3 | 4 | 5 | 6
export type Names =
  | 'TIME_IN_FORCE_UNSPECIFIED'
  | 'TIME_IN_FORCE_GTC'
  | 'TIME_IN_FORCE_GTT'
  | 'TIME_IN_FORCE_IOC'
  | 'TIME_IN_FORCE_FOK'
  | 'TIME_IN_FORCE_GFA'
  | 'TIME_IN_FORCE_GFN'

export const enum TimeInForce {
  TIME_IN_FORCE_UNSPECIFIED = 0,
  TIME_IN_FORCE_GTC = 1,
  TIME_IN_FORCE_GTT = 2,
  TIME_IN_FORCE_IOC = 3,
  TIME_IN_FORCE_FOK = 4,
  TIME_IN_FORCE_GFA = 5,
  TIME_IN_FORCE_GFN = 6
}

declare const enumValues: Map<Names, Values>
declare const enumNames: Map<Values, Names>

export function encode(
  value: Values | Names,
  buf: Uint8Array,
  byteOffset: number
): Uint8Array

export function decode(varint: bigint): LiteralUnion<Names, number>

export function encodingLength(value: LiteralUnion<Values, number>): number

export function stringify(int: Values): LiteralUnion<Names, undefined>

export function parse(str: Names): LiteralUnion<Values, undefined>
