/// autogenerated by protoc-plugin-js
const reader = require('protobuf-codec/decode/reader')
const { string, uint64, bytes, bool } = require('protobuf-codec/decode/types')

exports.decode = function decode(
  buf,
  byteOffset = 0,
  byteLength = buf.byteLength
) {
  let field$specId = ''
  let field$blockHeight = 0n
  let field$blockTime = 0n
  let field$result = new Uint8Array(0)
  let field$error = null
  let field$sourceChainId = null
  let field$heartbeat = false
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$specId = string(data)
        break

      case 2:
        field$blockHeight = uint64(data)
        break

      case 3:
        field$blockTime = uint64(data)
        break

      case 4:
        field$result = bytes(data)
        break

      case 5:
        field$error = string(data)
        break

      case 6:
        field$sourceChainId = uint64(data)
        break

      case 7:
        field$heartbeat = bool(data)
        break
    }
  }
  return {
    specId: field$specId,
    blockHeight: field$blockHeight,
    blockTime: field$blockTime,
    result: field$result,
    error: field$error,
    sourceChainId: field$sourceChainId,
    heartbeat: field$heartbeat
  }
}
