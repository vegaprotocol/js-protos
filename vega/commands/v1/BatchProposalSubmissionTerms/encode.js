/// autogenerated by protoc-plugin-js
const Writer = require('protobuf-codec/encode/writer')
const { int64 } = require('protobuf-codec/encode/types')
const _vega_BatchProposalTermsChange = require('./../../../BatchProposalTermsChange/encode.js')

exports.encode = function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer()

  if (obj.closingTimestamp) writer.varint(1, obj.closingTimestamp, int64)
  if (obj.changes?.length)
    obj.changes.forEach((v) =>
      writer.bytes(2, _vega_BatchProposalTermsChange.encode(v))
    )

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }
