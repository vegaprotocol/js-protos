/// autogenerated by protoc-plugin-js
const Writer = require('protobuf-codec/encode/writer')
const { uint64, string } = require('protobuf-codec/encode/types')
const _vega_commands_v1_Signature = require('./../Signature/encode.js')

exports.encode = function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer()

  if (obj.targetBlock) writer.varint(1, obj.targetBlock, uint64)
  if (obj.newAddress) writer.bytes(2, obj.newAddress, string)
  if (obj.currentAddress) writer.bytes(3, obj.currentAddress, string)
  if (obj.submitterAddress) writer.bytes(4, obj.submitterAddress, string)
  if (obj.ethereumSignature)
    writer.bytes(5, _vega_commands_v1_Signature.encode(obj.ethereumSignature))

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }
