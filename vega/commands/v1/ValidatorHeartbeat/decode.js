/// autogenerated by protoc-plugin-js
const reader = require('protobuf-codec/decode/reader')
const { string } = require('protobuf-codec/decode/types')
const _vega_commands_v1_Signature = require('./../Signature/decode.js')

exports.decode = function decode(
  buf,
  byteOffset = 0,
  byteLength = buf.byteLength
) {
  let field$nodeId = ''
  let field$ethereumSignature = {}
  let field$vegaSignature = {}
  let field$message = ''
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$nodeId = string(data)
        break

      case 2:
        field$ethereumSignature = _vega_commands_v1_Signature.decode(data)
        break

      case 3:
        field$vegaSignature = _vega_commands_v1_Signature.decode(data)
        break

      case 4:
        field$message = string(data)
        break
    }
  }
  return {
    nodeId: field$nodeId,
    ethereumSignature: field$ethereumSignature,
    vegaSignature: field$vegaSignature,
    message: field$message
  }
}
