/// autogenerated by protoc-plugin-js
const reader = require('protobuf-codec/decode/reader')
const { string } = require('protobuf-codec/decode/types')
const _vega_commands_v1_SubmitAMM_ConcentratedLiquidityParameters = require('./ConcentratedLiquidityParameters/decode.js')

exports.decode = function decode(
  buf,
  byteOffset = 0,
  byteLength = buf.byteLength
) {
  let field$marketId = ''
  let field$commitmentAmount = ''
  let field$slippageTolerance = ''
  let field$concentratedLiquidityParameters = {}
  let field$proposedFee = ''
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$marketId = string(data)
        break

      case 2:
        field$commitmentAmount = string(data)
        break

      case 3:
        field$slippageTolerance = string(data)
        break

      case 4:
        field$concentratedLiquidityParameters =
          _vega_commands_v1_SubmitAMM_ConcentratedLiquidityParameters.decode(
            data
          )
        break

      case 5:
        field$proposedFee = string(data)
        break
    }
  }
  return {
    marketId: field$marketId,
    commitmentAmount: field$commitmentAmount,
    slippageTolerance: field$slippageTolerance,
    concentratedLiquidityParameters: field$concentratedLiquidityParameters,
    proposedFee: field$proposedFee
  }
}
