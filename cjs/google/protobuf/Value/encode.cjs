'use strict';

var Writer = require('protobuf-codec/encode/writer');
var types = require('protobuf-codec/encode/types');
var NullValue = require('../NullValue.cjs');
var encode$1 = require('../Struct/encode.cjs');
var encode$2 = require('../ListValue/encode.cjs');

/// autogenerated by protoc-plugin-js

function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer();

  if (obj.kind?.nullValue ?? obj.nullValue)
    writer.varint(
      1,
      obj.kind?.nullValue ?? obj.nullValue,
      NullValue
    );
  if (obj.kind?.numberValue ?? obj.numberValue)
    writer.fixed64(2, obj.kind?.numberValue ?? obj.numberValue, types.double);
  if (obj.kind?.stringValue ?? obj.stringValue)
    writer.bytes(3, obj.kind?.stringValue ?? obj.stringValue, types.string);
  if (obj.kind?.boolValue ?? obj.boolValue)
    writer.varint(4, obj.kind?.boolValue ?? obj.boolValue, types.bool);
  if (obj.kind?.structValue ?? obj.structValue)
    writer.bytes(
      5,
      encode$1.encode(obj.kind?.structValue ?? obj.structValue)
    );
  if (obj.kind?.listValue ?? obj.listValue)
    writer.bytes(
      6,
      encode$2.encode(obj.kind?.listValue ?? obj.listValue)
    );

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }

exports.encode = encode;
