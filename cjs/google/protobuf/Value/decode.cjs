'use strict';

var reader = require('protobuf-codec/decode/reader');
var types = require('protobuf-codec/decode/types');
var NullValue = require('../NullValue.cjs');
var decode$2 = require('../Struct/decode.cjs');
var decode$1 = require('../ListValue/decode.cjs');

/// autogenerated by protoc-plugin-js

function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$kind = null;
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$kind = { nullValue: NullValue.decode(data) };
        break

      case 2:
        field$kind = { numberValue: types.double(data) };
        break

      case 3:
        field$kind = { stringValue: types.string(data) };
        break

      case 4:
        field$kind = { boolValue: types.bool(data) };
        break

      case 5:
        field$kind = { structValue: decode$2.decode(data) };
        break

      case 6:
        field$kind = { listValue: decode$1.decode(data) };
        break
    }
  }
  return { kind: field$kind }
}

exports.decode = decode;
