'use strict';

var reader = require('protobuf-codec/decode/reader');
var types = require('protobuf-codec/decode/types');
var decode$2 = require('../FutureProduct/decode.cjs');
var decode$1 = require('../SpotProduct/decode.cjs');

/// autogenerated by protoc-plugin-js

function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$name = '';
  let field$code = '';
  let field$product = null;
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$name = types.string(data);
        break

      case 2:
        field$code = types.string(data);
        break

      case 100:
        field$product = { future: decode$2.decode(data) };
        break

      case 101:
        field$product = { spot: decode$1.decode(data) };
        break
    }
  }
  return { name: field$name, code: field$code, product: field$product }
}

exports.decode = decode;
