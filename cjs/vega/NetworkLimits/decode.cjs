'use strict';

var reader = require('protobuf-codec/decode/reader');
var types = require('protobuf-codec/decode/types');

/// autogenerated by protoc-plugin-js

function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$canProposeMarket = false;
  let field$canProposeAsset = false;
  let field$proposeMarketEnabled = false;
  let field$proposeAssetEnabled = false;
  let field$genesisLoaded = false;
  let field$proposeMarketEnabledFrom = 0n;
  let field$proposeAssetEnabledFrom = 0n;
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$canProposeMarket = types.bool(data);
        break

      case 2:
        field$canProposeAsset = types.bool(data);
        break

      case 4:
        field$proposeMarketEnabled = types.bool(data);
        break

      case 5:
        field$proposeAssetEnabled = types.bool(data);
        break

      case 7:
        field$genesisLoaded = types.bool(data);
        break

      case 8:
        field$proposeMarketEnabledFrom = types.int64(data);
        break

      case 9:
        field$proposeAssetEnabledFrom = types.int64(data);
        break
    }
  }
  return {
    canProposeMarket: field$canProposeMarket,
    canProposeAsset: field$canProposeAsset,
    proposeMarketEnabled: field$proposeMarketEnabled,
    proposeAssetEnabled: field$proposeAssetEnabled,
    genesisLoaded: field$genesisLoaded,
    proposeMarketEnabledFrom: field$proposeMarketEnabledFrom,
    proposeAssetEnabledFrom: field$proposeAssetEnabledFrom
  }
}

exports.decode = decode;
