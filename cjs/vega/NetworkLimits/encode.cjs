'use strict';

var Writer = require('protobuf-codec/encode/writer');
var types = require('protobuf-codec/encode/types');

/// autogenerated by protoc-plugin-js

function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer();

  if (obj.canProposeMarket) writer.varint(1, obj.canProposeMarket, types.bool);
  if (obj.canProposeAsset) writer.varint(2, obj.canProposeAsset, types.bool);
  if (obj.proposeMarketEnabled) writer.varint(4, obj.proposeMarketEnabled, types.bool);
  if (obj.proposeAssetEnabled) writer.varint(5, obj.proposeAssetEnabled, types.bool);
  if (obj.genesisLoaded) writer.varint(7, obj.genesisLoaded, types.bool);
  if (obj.proposeMarketEnabledFrom)
    writer.varint(8, obj.proposeMarketEnabledFrom, types.int64);
  if (obj.proposeAssetEnabledFrom)
    writer.varint(9, obj.proposeAssetEnabledFrom, types.int64);

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }

exports.encode = encode;
