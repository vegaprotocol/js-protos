'use strict';

var Writer = require('protobuf-codec/encode/writer');
var types = require('protobuf-codec/encode/types');
var Status = require('./Status.cjs');
var encode$1 = require('../WithdrawExt/encode.cjs');

/// autogenerated by protoc-plugin-js

function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer();

  if (obj.id) writer.bytes(1, obj.id, types.string);
  if (obj.partyId) writer.bytes(2, obj.partyId, types.string);
  if (obj.amount) writer.bytes(3, obj.amount, types.string);
  if (obj.asset) writer.bytes(4, obj.asset, types.string);
  if (obj.status) writer.varint(5, obj.status, Status);
  if (obj.ref) writer.bytes(6, obj.ref, types.string);
  if (obj.txHash) writer.bytes(8, obj.txHash, types.string);
  if (obj.createdTimestamp) writer.varint(9, obj.createdTimestamp, types.int64);
  if (obj.withdrawnTimestamp) writer.varint(10, obj.withdrawnTimestamp, types.int64);
  if (obj.ext) writer.bytes(11, encode$1.encode(obj.ext));

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }

exports.encode = encode;
