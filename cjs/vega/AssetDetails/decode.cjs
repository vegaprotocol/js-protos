'use strict';

var reader = require('protobuf-codec/decode/reader');
var types = require('protobuf-codec/decode/types');
var decode$2 = require('../BuiltinAsset/decode.cjs');
var decode$1 = require('../ERC20/decode.cjs');

/// autogenerated by protoc-plugin-js

function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$name = '';
  let field$symbol = '';
  let field$decimals = 0n;
  let field$quantum = '';
  let field$source = null;
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$name = types.string(data);
        break

      case 2:
        field$symbol = types.string(data);
        break

      case 4:
        field$decimals = types.uint64(data);
        break

      case 5:
        field$quantum = types.string(data);
        break

      case 101:
        field$source = { builtinAsset: decode$2.decode(data) };
        break

      case 102:
        field$source = { erc20: decode$1.decode(data) };
        break
    }
  }
  return {
    name: field$name,
    symbol: field$symbol,
    decimals: field$decimals,
    quantum: field$quantum,
    source: field$source
  }
}

exports.decode = decode;
