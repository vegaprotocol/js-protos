'use strict';

var reader = require('protobuf-codec/decode/reader');
var decode$3 = require('../ScalarValue/decode.cjs');
var decode$2 = require('../VectorValue/decode.cjs');
var decode$1 = require('../MatrixValue/decode.cjs');

/// autogenerated by protoc-plugin-js

function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$value = null;
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$value = { scalarVal: decode$3.decode(data) };
        break

      case 2:
        field$value = { vectorVal: decode$2.decode(data) };
        break

      case 3:
        field$value = { matrixVal: decode$1.decode(data) };
        break
    }
  }
  return { value: field$value }
}

exports.decode = decode;
