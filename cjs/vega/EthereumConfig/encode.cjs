'use strict';

var Writer = require('protobuf-codec/encode/writer');
var types = require('protobuf-codec/encode/types');
var encode$1 = require('../EthereumContractConfig/encode.cjs');

/// autogenerated by protoc-plugin-js

function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer();

  if (obj.networkId) writer.bytes(1, obj.networkId, types.string);
  if (obj.chainId) writer.bytes(2, obj.chainId, types.string);
  if (obj.collateralBridgeContract)
    writer.bytes(
      3,
      encode$1.encode(obj.collateralBridgeContract)
    );
  if (obj.confirmations) writer.varint(4, obj.confirmations, types.uint32);
  if (obj.stakingBridgeContract)
    writer.bytes(
      5,
      encode$1.encode(obj.stakingBridgeContract)
    );
  if (obj.tokenVestingContract)
    writer.bytes(
      6,
      encode$1.encode(obj.tokenVestingContract)
    );
  if (obj.multisigControlContract)
    writer.bytes(
      7,
      encode$1.encode(obj.multisigControlContract)
    );

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }

exports.encode = encode;
