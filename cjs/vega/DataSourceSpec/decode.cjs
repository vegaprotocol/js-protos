'use strict';

var reader = require('protobuf-codec/decode/reader');
var types = require('protobuf-codec/decode/types');
var decode$1 = require('../DataSourceDefinition/decode.cjs');
var Status = require('./Status.cjs');

/// autogenerated by protoc-plugin-js

function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$id = '';
  let field$createdAt = 0n;
  let field$updatedAt = 0n;
  let field$data = {};
  let field$status = 0;
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$id = types.string(data);
        break

      case 2:
        field$createdAt = types.int64(data);
        break

      case 3:
        field$updatedAt = types.int64(data);
        break

      case 4:
        field$data = decode$1.decode(data);
        break

      case 5:
        field$status = Status.decode(data);
        break
    }
  }
  return {
    id: field$id,
    createdAt: field$createdAt,
    updatedAt: field$updatedAt,
    data: field$data,
    status: field$status
  }
}

exports.decode = decode;
