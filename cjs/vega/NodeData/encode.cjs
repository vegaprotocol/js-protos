'use strict';

var Writer = require('protobuf-codec/encode/writer');
var types = require('protobuf-codec/encode/types');
var encode$1 = require('../NodeSet/encode.cjs');

/// autogenerated by protoc-plugin-js

function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer();

  if (obj.stakedTotal) writer.bytes(1, obj.stakedTotal, types.string);
  if (obj.totalNodes) writer.varint(2, obj.totalNodes, types.uint32);
  if (obj.inactiveNodes) writer.varint(3, obj.inactiveNodes, types.uint32);
  if (obj.tendermintNodes)
    writer.bytes(4, encode$1.encode(obj.tendermintNodes));
  if (obj.ersatzNodes) writer.bytes(5, encode$1.encode(obj.ersatzNodes));
  if (obj.pendingNodes) writer.bytes(6, encode$1.encode(obj.pendingNodes));
  if (obj.uptime) writer.fixed32(7, obj.uptime, types.float);

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }

exports.encode = encode;
