'use strict';

var Writer = require('protobuf-codec/encode/writer');
var types = require('protobuf-codec/encode/types');
var Side = require('../../../Side.cjs');
var TimeInForce = require('../../../Order/TimeInForce.cjs');
var Type = require('../../../Order/Type.cjs');
var encode$1 = require('../../../PeggedOrder/encode.cjs');
var encode$2 = require('../IcebergOpts/encode.cjs');

/// autogenerated by protoc-plugin-js

function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer();

  if (obj.marketId) writer.bytes(1, obj.marketId, types.string);
  if (obj.price) writer.bytes(2, obj.price, types.string);
  if (obj.size) writer.varint(3, obj.size, types.uint64);
  if (obj.side) writer.varint(4, obj.side, Side);
  if (obj.timeInForce)
    writer.varint(5, obj.timeInForce, TimeInForce);
  if (obj.expiresAt) writer.varint(6, obj.expiresAt, types.int64);
  if (obj.type) writer.varint(7, obj.type, Type);
  if (obj.reference) writer.bytes(8, obj.reference, types.string);
  if (obj.peggedOrder)
    writer.bytes(9, encode$1.encode(obj.peggedOrder));
  if (obj.postOnly) writer.varint(10, obj.postOnly, types.bool);
  if (obj.reduceOnly) writer.varint(11, obj.reduceOnly, types.bool);
  if (obj.icebergOpts)
    writer.bytes(12, encode$2.encode(obj.icebergOpts));

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }

exports.encode = encode;
