'use strict';

var reader = require('protobuf-codec/decode/reader');
var types = require('protobuf-codec/decode/types');
var decode$1 = require('../Signature/decode.cjs');

/// autogenerated by protoc-plugin-js

function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$targetBlock = 0n;
  let field$newAddress = '';
  let field$currentAddress = '';
  let field$submitterAddress = '';
  let field$ethereumSignature = {};
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$targetBlock = types.uint64(data);
        break

      case 2:
        field$newAddress = types.string(data);
        break

      case 3:
        field$currentAddress = types.string(data);
        break

      case 4:
        field$submitterAddress = types.string(data);
        break

      case 5:
        field$ethereumSignature = decode$1.decode(data);
        break
    }
  }
  return {
    targetBlock: field$targetBlock,
    newAddress: field$newAddress,
    currentAddress: field$currentAddress,
    submitterAddress: field$submitterAddress,
    ethereumSignature: field$ethereumSignature
  }
}

exports.decode = decode;
