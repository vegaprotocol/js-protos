'use strict';

var Writer = require('protobuf-codec/encode/writer');
var types = require('protobuf-codec/encode/types');
var encode$1 = require('../Signature/encode.cjs');

/// autogenerated by protoc-plugin-js

function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer();

  if (obj.targetBlock) writer.varint(1, obj.targetBlock, types.uint64);
  if (obj.newAddress) writer.bytes(2, obj.newAddress, types.string);
  if (obj.currentAddress) writer.bytes(3, obj.currentAddress, types.string);
  if (obj.submitterAddress) writer.bytes(4, obj.submitterAddress, types.string);
  if (obj.ethereumSignature)
    writer.bytes(5, encode$1.encode(obj.ethereumSignature));

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }

exports.encode = encode;
