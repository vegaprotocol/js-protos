'use strict';

var Writer = require('protobuf-codec/encode/writer');
var types = require('protobuf-codec/encode/types');
var AccountType = require('../../../AccountType.cjs');
var encode$1 = require('../OneOffTransfer/encode.cjs');
var encode$2 = require('../RecurringTransfer/encode.cjs');

/// autogenerated by protoc-plugin-js

function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer();

  if (obj.fromAccountType)
    writer.varint(1, obj.fromAccountType, AccountType);
  if (obj.to) writer.bytes(2, obj.to, types.string);
  if (obj.toAccountType) writer.varint(3, obj.toAccountType, AccountType);
  if (obj.asset) writer.bytes(4, obj.asset, types.string);
  if (obj.amount) writer.bytes(5, obj.amount, types.string);
  if (obj.reference) writer.bytes(6, obj.reference, types.string);

  if (obj.kind?.oneOff ?? obj.oneOff)
    writer.bytes(
      101,
      encode$1.encode(obj.kind?.oneOff ?? obj.oneOff)
    );
  if (obj.kind?.recurring ?? obj.recurring)
    writer.bytes(
      102,
      encode$2.encode(
        obj.kind?.recurring ?? obj.recurring
      )
    );

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }

exports.encode = encode;
