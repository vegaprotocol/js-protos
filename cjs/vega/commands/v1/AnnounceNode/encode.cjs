'use strict';

var Writer = require('protobuf-codec/encode/writer');
var types = require('protobuf-codec/encode/types');
var encode$1 = require('../Signature/encode.cjs');

/// autogenerated by protoc-plugin-js

function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer();

  if (obj.vegaPubKey) writer.bytes(1, obj.vegaPubKey, types.string);
  if (obj.ethereumAddress) writer.bytes(2, obj.ethereumAddress, types.string);
  if (obj.chainPubKey) writer.bytes(3, obj.chainPubKey, types.string);
  if (obj.infoUrl) writer.bytes(4, obj.infoUrl, types.string);
  if (obj.country) writer.bytes(5, obj.country, types.string);
  if (obj.id) writer.bytes(6, obj.id, types.string);
  if (obj.name) writer.bytes(7, obj.name, types.string);
  if (obj.avatarUrl) writer.bytes(8, obj.avatarUrl, types.string);
  if (obj.vegaPubKeyIndex) writer.varint(9, obj.vegaPubKeyIndex, types.uint32);
  if (obj.fromEpoch) writer.varint(10, obj.fromEpoch, types.uint64);
  if (obj.ethereumSignature)
    writer.bytes(11, encode$1.encode(obj.ethereumSignature));
  if (obj.vegaSignature)
    writer.bytes(12, encode$1.encode(obj.vegaSignature));
  if (obj.submitterAddress) writer.bytes(13, obj.submitterAddress, types.string);

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }

exports.encode = encode;
