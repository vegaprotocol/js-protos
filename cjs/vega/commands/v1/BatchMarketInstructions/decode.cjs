'use strict';

var reader = require('protobuf-codec/decode/reader');
var decode$5 = require('../OrderCancellation/decode.cjs');
var decode$4 = require('../OrderAmendment/decode.cjs');
var decode$3 = require('../OrderSubmission/decode.cjs');
var decode$2 = require('../StopOrdersCancellation/decode.cjs');
var decode$1 = require('../StopOrdersSubmission/decode.cjs');

/// autogenerated by protoc-plugin-js

function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  const field$cancellations = [];
  const field$amendments = [];
  const field$submissions = [];
  const field$stopOrdersCancellation = [];
  const field$stopOrdersSubmission = [];
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$cancellations.push(
          decode$5.decode(data)
        );
        break

      case 2:
        field$amendments.push(decode$4.decode(data));
        break

      case 3:
        field$submissions.push(decode$3.decode(data));
        break

      case 4:
        field$stopOrdersCancellation.push(
          decode$2.decode(data)
        );
        break

      case 5:
        field$stopOrdersSubmission.push(
          decode$1.decode(data)
        );
        break
    }
  }
  return {
    cancellations: field$cancellations,
    amendments: field$amendments,
    submissions: field$submissions,
    stopOrdersCancellation: field$stopOrdersCancellation,
    stopOrdersSubmission: field$stopOrdersSubmission
  }
}

exports.decode = decode;
