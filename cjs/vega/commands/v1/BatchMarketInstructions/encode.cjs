'use strict';

var Writer = require('protobuf-codec/encode/writer');
var encode$1 = require('../OrderCancellation/encode.cjs');
var encode$2 = require('../OrderAmendment/encode.cjs');
var encode$3 = require('../OrderSubmission/encode.cjs');
var encode$4 = require('../StopOrdersCancellation/encode.cjs');
var encode$5 = require('../StopOrdersSubmission/encode.cjs');

/// autogenerated by protoc-plugin-js

function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer();

  if (obj.cancellations?.length)
    obj.cancellations.forEach((v) =>
      writer.bytes(1, encode$1.encode(v))
    );
  if (obj.amendments?.length)
    obj.amendments.forEach((v) =>
      writer.bytes(2, encode$2.encode(v))
    );
  if (obj.submissions?.length)
    obj.submissions.forEach((v) =>
      writer.bytes(3, encode$3.encode(v))
    );
  if (obj.stopOrdersCancellation?.length)
    obj.stopOrdersCancellation.forEach((v) =>
      writer.bytes(4, encode$4.encode(v))
    );
  if (obj.stopOrdersSubmission?.length)
    obj.stopOrdersSubmission.forEach((v) =>
      writer.bytes(5, encode$5.encode(v))
    );

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }

exports.encode = encode;
