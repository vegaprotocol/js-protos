'use strict';

var reader = require('protobuf-codec/decode/reader');
var types = require('protobuf-codec/decode/types');
var TimeInForce = require('../../../Order/TimeInForce.cjs');
var PeggedReference = require('../../../PeggedReference.cjs');

/// autogenerated by protoc-plugin-js

function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$orderId = '';
  let field$marketId = '';
  let field$price = null;
  let field$sizeDelta = 0n;
  let field$expiresAt = null;
  let field$timeInForce = 0;
  let field$peggedOffset = '';
  let field$peggedReference = 0;
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$orderId = types.string(data);
        break

      case 2:
        field$marketId = types.string(data);
        break

      case 3:
        field$price = types.string(data);
        break

      case 4:
        field$sizeDelta = types.int64(data);
        break

      case 5:
        field$expiresAt = types.int64(data);
        break

      case 6:
        field$timeInForce = TimeInForce.decode(data);
        break

      case 7:
        field$peggedOffset = types.string(data);
        break

      case 8:
        field$peggedReference = PeggedReference.decode(data);
        break
    }
  }
  return {
    orderId: field$orderId,
    marketId: field$marketId,
    price: field$price,
    sizeDelta: field$sizeDelta,
    expiresAt: field$expiresAt,
    timeInForce: field$timeInForce,
    peggedOffset: field$peggedOffset,
    peggedReference: field$peggedReference
  }
}

exports.decode = decode;
