'use strict';

var Writer = require('protobuf-codec/encode/writer');
var types = require('protobuf-codec/encode/types');
var encode$1 = require('../Signature/encode.cjs');
var TxVersion = require('../TxVersion.cjs');
var encode$2 = require('../ProofOfWork/encode.cjs');

/// autogenerated by protoc-plugin-js

function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer();

  if (obj.inputData) writer.bytes(1, obj.inputData, types.bytes);
  if (obj.signature)
    writer.bytes(2, encode$1.encode(obj.signature));
  if (obj.version) writer.varint(2000, obj.version, TxVersion);
  if (obj.pow) writer.bytes(3000, encode$2.encode(obj.pow));

  if (obj.from?.address ?? obj.address)
    writer.bytes(1001, obj.from?.address ?? obj.address, types.string);
  if (obj.from?.pubKey ?? obj.pubKey)
    writer.bytes(1002, obj.from?.pubKey ?? obj.pubKey, types.string);

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }

exports.encode = encode;
