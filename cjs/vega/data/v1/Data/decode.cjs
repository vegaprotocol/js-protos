'use strict';

var reader = require('protobuf-codec/decode/reader');
var types = require('protobuf-codec/decode/types');
var decode$2 = require('../Signer/decode.cjs');
var decode$1 = require('../Property/decode.cjs');

/// autogenerated by protoc-plugin-js

function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  const field$signers = [];
  const field$data = [];
  const field$matchedSpecIds = [];
  let field$broadcastAt = 0n;
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$signers.push(decode$2.decode(data));
        break

      case 2:
        field$data.push(decode$1.decode(data));
        break

      case 3:
        field$matchedSpecIds.push(types.string(data));
        break

      case 4:
        field$broadcastAt = types.int64(data);
        break
    }
  }
  return {
    signers: field$signers,
    data: field$data,
    matchedSpecIds: field$matchedSpecIds,
    broadcastAt: field$broadcastAt
  }
}

exports.decode = decode;
