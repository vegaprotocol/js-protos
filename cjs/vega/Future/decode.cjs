'use strict';

var reader = require('protobuf-codec/decode/reader');
var types = require('protobuf-codec/decode/types');
var decode$2 = require('../DataSourceSpec/decode.cjs');
var decode$1 = require('../DataSourceSpecToFutureBinding/decode.cjs');

/// autogenerated by protoc-plugin-js

function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$settlementAsset = '';
  let field$quoteName = '';
  let field$dataSourceSpecForSettlementData = {};
  let field$dataSourceSpecForTradingTermination = {};
  let field$dataSourceSpecBinding = {};
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$settlementAsset = types.string(data);
        break

      case 2:
        field$quoteName = types.string(data);
        break

      case 3:
        field$dataSourceSpecForSettlementData =
          decode$2.decode(data);
        break

      case 4:
        field$dataSourceSpecForTradingTermination =
          decode$2.decode(data);
        break

      case 5:
        field$dataSourceSpecBinding =
          decode$1.decode(data);
        break
    }
  }
  return {
    settlementAsset: field$settlementAsset,
    quoteName: field$quoteName,
    dataSourceSpecForSettlementData: field$dataSourceSpecForSettlementData,
    dataSourceSpecForTradingTermination:
      field$dataSourceSpecForTradingTermination,
    dataSourceSpecBinding: field$dataSourceSpecBinding
  }
}

exports.decode = decode;
