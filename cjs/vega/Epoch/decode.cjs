'use strict';

var reader = require('protobuf-codec/decode/reader');
var types = require('protobuf-codec/decode/types');
var decode$3 = require('../EpochTimestamps/decode.cjs');
var decode$2 = require('../Node/decode.cjs');
var decode$1 = require('../Delegation/decode.cjs');

/// autogenerated by protoc-plugin-js

function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$seq = 0n;
  let field$timestamps = {};
  const field$validators = [];
  const field$delegations = [];
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$seq = types.uint64(data);
        break

      case 2:
        field$timestamps = decode$3.decode(data);
        break

      case 3:
        field$validators.push(decode$2.decode(data));
        break

      case 4:
        field$delegations.push(decode$1.decode(data));
        break
    }
  }
  return {
    seq: field$seq,
    timestamps: field$timestamps,
    validators: field$validators,
    delegations: field$delegations
  }
}

exports.decode = decode;
