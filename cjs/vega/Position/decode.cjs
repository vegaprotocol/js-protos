'use strict';

var reader = require('protobuf-codec/decode/reader');
var types = require('protobuf-codec/decode/types');
var PositionStatus = require('../PositionStatus.cjs');

/// autogenerated by protoc-plugin-js

function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$marketId = '';
  let field$partyId = '';
  let field$openVolume = 0n;
  let field$realisedPnl = '';
  let field$unrealisedPnl = '';
  let field$averageEntryPrice = '';
  let field$updatedAt = 0n;
  let field$lossSocialisationAmount = '';
  let field$positionStatus = 0;
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$marketId = types.string(data);
        break

      case 2:
        field$partyId = types.string(data);
        break

      case 3:
        field$openVolume = types.int64(data);
        break

      case 4:
        field$realisedPnl = types.string(data);
        break

      case 5:
        field$unrealisedPnl = types.string(data);
        break

      case 6:
        field$averageEntryPrice = types.string(data);
        break

      case 7:
        field$updatedAt = types.int64(data);
        break

      case 8:
        field$lossSocialisationAmount = types.string(data);
        break

      case 9:
        field$positionStatus = PositionStatus.decode(data);
        break
    }
  }
  return {
    marketId: field$marketId,
    partyId: field$partyId,
    openVolume: field$openVolume,
    realisedPnl: field$realisedPnl,
    unrealisedPnl: field$unrealisedPnl,
    averageEntryPrice: field$averageEntryPrice,
    updatedAt: field$updatedAt,
    lossSocialisationAmount: field$lossSocialisationAmount,
    positionStatus: field$positionStatus
  }
}

exports.decode = decode;
