'use strict';

var reader = require('protobuf-codec/decode/reader');
var decode$4 = require('../Proposal/decode.cjs');
var decode$3 = require('../Vote/decode.cjs');
var decode$2 = require('./YesPartyEntry/decode.cjs');
var decode$1 = require('./NoPartyEntry/decode.cjs');

/// autogenerated by protoc-plugin-js

function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$proposal = {};
  const field$yes = [];
  const field$no = [];
  const field$yesParty = [];
  const field$noParty = [];
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$proposal = decode$4.decode(data);
        break

      case 2:
        field$yes.push(decode$3.decode(data));
        break

      case 3:
        field$no.push(decode$3.decode(data));
        break

      case 4:
        field$yesParty.push(decode$2.decode(data));
        break

      case 5:
        field$noParty.push(decode$1.decode(data));
        break
    }
  }
  return {
    proposal: field$proposal,
    yes: field$yes,
    no: field$no,
    yesParty: field$yesParty,
    noParty: field$noParty
  }
}

exports.decode = decode;
