'use strict';

var Writer = require('protobuf-codec/encode/writer');
var encode$1 = require('../Proposal/encode.cjs');
var encode$2 = require('../Vote/encode.cjs');
var encode$3 = require('./YesPartyEntry/encode.cjs');
var encode$4 = require('./NoPartyEntry/encode.cjs');

/// autogenerated by protoc-plugin-js

function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer();

  if (obj.proposal) writer.bytes(1, encode$1.encode(obj.proposal));
  if (obj.yes?.length)
    obj.yes.forEach((v) => writer.bytes(2, encode$2.encode(v)));
  if (obj.no?.length)
    obj.no.forEach((v) => writer.bytes(3, encode$2.encode(v)));
  if (obj.yesParty?.length)
    obj.yesParty.forEach((v) =>
      writer.bytes(4, encode$3.encode(v))
    );
  if (obj.noParty?.length)
    obj.noParty.forEach((v) =>
      writer.bytes(5, encode$4.encode(v))
    );

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }

exports.encode = encode;
