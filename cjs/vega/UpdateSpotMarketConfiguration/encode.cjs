'use strict';

var Writer = require('protobuf-codec/encode/writer');
var types = require('protobuf-codec/encode/types');
var encode$1 = require('../PriceMonitoringParameters/encode.cjs');
var encode$2 = require('../TargetStakeParameters/encode.cjs');
var encode$3 = require('../SimpleModelParams/encode.cjs');
var encode$4 = require('../LogNormalRiskModel/encode.cjs');

/// autogenerated by protoc-plugin-js

function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer();

  if (obj.metadata?.length)
    obj.metadata.forEach((v) => writer.bytes(1, v, types.string));
  if (obj.priceMonitoringParameters)
    writer.bytes(
      2,
      encode$1.encode(obj.priceMonitoringParameters)
    );
  if (obj.targetStakeParameters)
    writer.bytes(
      3,
      encode$2.encode(obj.targetStakeParameters)
    );

  if (obj.risk_parameters?.simple ?? obj.simple)
    writer.bytes(
      100,
      encode$3.encode(obj.risk_parameters?.simple ?? obj.simple)
    );
  if (obj.risk_parameters?.logNormal ?? obj.logNormal)
    writer.bytes(
      101,
      encode$4.encode(
        obj.risk_parameters?.logNormal ?? obj.logNormal
      )
    );

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }

exports.encode = encode;
