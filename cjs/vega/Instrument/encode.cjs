'use strict';

var Writer = require('protobuf-codec/encode/writer');
var types = require('protobuf-codec/encode/types');
var encode$1 = require('../InstrumentMetadata/encode.cjs');
var encode$2 = require('../Future/encode.cjs');
var encode$3 = require('../Spot/encode.cjs');

/// autogenerated by protoc-plugin-js

function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer();

  if (obj.id) writer.bytes(1, obj.id, types.string);
  if (obj.code) writer.bytes(2, obj.code, types.string);
  if (obj.name) writer.bytes(3, obj.name, types.string);
  if (obj.metadata)
    writer.bytes(4, encode$1.encode(obj.metadata));

  if (obj.product?.future ?? obj.future)
    writer.bytes(100, encode$2.encode(obj.product?.future ?? obj.future));
  if (obj.product?.spot ?? obj.spot)
    writer.bytes(101, encode$3.encode(obj.product?.spot ?? obj.spot));

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }

exports.encode = encode;
