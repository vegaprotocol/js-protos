'use strict';

var Writer = require('protobuf-codec/encode/writer');
var types = require('protobuf-codec/encode/types');
var encode$1 = require('../UpdateMarket/encode.cjs');
var encode$2 = require('../NewMarket/encode.cjs');
var encode$3 = require('../UpdateNetworkParameter/encode.cjs');
var encode$4 = require('../NewAsset/encode.cjs');
var encode$5 = require('../NewFreeform/encode.cjs');
var encode$6 = require('../UpdateAsset/encode.cjs');
var encode$7 = require('../NewSpotMarket/encode.cjs');
var encode$8 = require('../UpdateSpotMarket/encode.cjs');
var encode$9 = require('../NewTransfer/encode.cjs');
var encode$a = require('../CancelTransfer/encode.cjs');

/// autogenerated by protoc-plugin-js

function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer();

  if (obj.closingTimestamp) writer.varint(1, obj.closingTimestamp, types.int64);
  if (obj.enactmentTimestamp) writer.varint(2, obj.enactmentTimestamp, types.int64);
  if (obj.validationTimestamp) writer.varint(3, obj.validationTimestamp, types.int64);

  if (obj.change?.updateMarket ?? obj.updateMarket)
    writer.bytes(
      101,
      encode$1.encode(obj.change?.updateMarket ?? obj.updateMarket)
    );
  if (obj.change?.newMarket ?? obj.newMarket)
    writer.bytes(
      102,
      encode$2.encode(obj.change?.newMarket ?? obj.newMarket)
    );
  if (obj.change?.updateNetworkParameter ?? obj.updateNetworkParameter)
    writer.bytes(
      103,
      encode$3.encode(
        obj.change?.updateNetworkParameter ?? obj.updateNetworkParameter
      )
    );
  if (obj.change?.newAsset ?? obj.newAsset)
    writer.bytes(
      104,
      encode$4.encode(obj.change?.newAsset ?? obj.newAsset)
    );
  if (obj.change?.newFreeform ?? obj.newFreeform)
    writer.bytes(
      105,
      encode$5.encode(obj.change?.newFreeform ?? obj.newFreeform)
    );
  if (obj.change?.updateAsset ?? obj.updateAsset)
    writer.bytes(
      106,
      encode$6.encode(obj.change?.updateAsset ?? obj.updateAsset)
    );
  if (obj.change?.newSpotMarket ?? obj.newSpotMarket)
    writer.bytes(
      107,
      encode$7.encode(obj.change?.newSpotMarket ?? obj.newSpotMarket)
    );
  if (obj.change?.updateSpotMarket ?? obj.updateSpotMarket)
    writer.bytes(
      108,
      encode$8.encode(
        obj.change?.updateSpotMarket ?? obj.updateSpotMarket
      )
    );
  if (obj.change?.newTransfer ?? obj.newTransfer)
    writer.bytes(
      109,
      encode$9.encode(obj.change?.newTransfer ?? obj.newTransfer)
    );
  if (obj.change?.cancelTransfer ?? obj.cancelTransfer)
    writer.bytes(
      110,
      encode$a.encode(
        obj.change?.cancelTransfer ?? obj.cancelTransfer
      )
    );

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }

exports.encode = encode;
