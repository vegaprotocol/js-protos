'use strict';

var Writer = require('protobuf-codec/encode/writer');
var types = require('protobuf-codec/encode/types');
var ValidatorNodeStatus = require('../ValidatorNodeStatus.cjs');

/// autogenerated by protoc-plugin-js

function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer();

  if (obj.stakeScore) writer.bytes(1, obj.stakeScore, types.string);
  if (obj.performanceScore) writer.bytes(2, obj.performanceScore, types.string);
  if (obj.previousStatus)
    writer.varint(3, obj.previousStatus, ValidatorNodeStatus);
  if (obj.status) writer.varint(4, obj.status, ValidatorNodeStatus);
  if (obj.votingPower) writer.varint(5, obj.votingPower, types.uint32);
  if (obj.rankingScore) writer.bytes(6, obj.rankingScore, types.string);

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }

exports.encode = encode;
