'use strict';

var reader = require('protobuf-codec/decode/reader');
var types = require('protobuf-codec/decode/types');
var Status = require('./Status.cjs');

/// autogenerated by protoc-plugin-js

function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$id = '';
  let field$status = 0;
  let field$partyId = '';
  let field$asset = '';
  let field$amount = '';
  let field$txHash = '';
  let field$creditedTimestamp = 0n;
  let field$createdTimestamp = 0n;
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$id = types.string(data);
        break

      case 2:
        field$status = Status.decode(data);
        break

      case 3:
        field$partyId = types.string(data);
        break

      case 4:
        field$asset = types.string(data);
        break

      case 5:
        field$amount = types.string(data);
        break

      case 6:
        field$txHash = types.string(data);
        break

      case 7:
        field$creditedTimestamp = types.int64(data);
        break

      case 8:
        field$createdTimestamp = types.int64(data);
        break
    }
  }
  return {
    id: field$id,
    status: field$status,
    partyId: field$partyId,
    asset: field$asset,
    amount: field$amount,
    txHash: field$txHash,
    creditedTimestamp: field$creditedTimestamp,
    createdTimestamp: field$createdTimestamp
  }
}

exports.decode = decode;
