'use strict';

var reader = require('protobuf-codec/decode/reader');
var types = require('protobuf-codec/decode/types');

/// autogenerated by protoc-plugin-js

function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$maintenanceMargin = '';
  let field$searchLevel = '';
  let field$initialMargin = '';
  let field$collateralReleaseLevel = '';
  let field$partyId = '';
  let field$marketId = '';
  let field$asset = '';
  let field$timestamp = 0n;
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$maintenanceMargin = types.string(data);
        break

      case 2:
        field$searchLevel = types.string(data);
        break

      case 3:
        field$initialMargin = types.string(data);
        break

      case 4:
        field$collateralReleaseLevel = types.string(data);
        break

      case 5:
        field$partyId = types.string(data);
        break

      case 6:
        field$marketId = types.string(data);
        break

      case 7:
        field$asset = types.string(data);
        break

      case 8:
        field$timestamp = types.int64(data);
        break
    }
  }
  return {
    maintenanceMargin: field$maintenanceMargin,
    searchLevel: field$searchLevel,
    initialMargin: field$initialMargin,
    collateralReleaseLevel: field$collateralReleaseLevel,
    partyId: field$partyId,
    marketId: field$marketId,
    asset: field$asset,
    timestamp: field$timestamp
  }
}

exports.decode = decode;
