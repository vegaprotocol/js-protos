'use strict';

var Writer = require('protobuf-codec/encode/writer');
var types = require('protobuf-codec/encode/types');
var encode$1 = require('../LiquidityOrderReference/encode.cjs');
var Status = require('./Status.cjs');

/// autogenerated by protoc-plugin-js

function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer();

  if (obj.id) writer.bytes(1, obj.id, types.string);
  if (obj.partyId) writer.bytes(2, obj.partyId, types.string);
  if (obj.createdAt) writer.varint(3, obj.createdAt, types.int64);
  if (obj.updatedAt) writer.varint(4, obj.updatedAt, types.int64);
  if (obj.marketId) writer.bytes(5, obj.marketId, types.string);
  if (obj.commitmentAmount) writer.bytes(6, obj.commitmentAmount, types.string);
  if (obj.fee) writer.bytes(7, obj.fee, types.string);
  if (obj.sells?.length)
    obj.sells.forEach((v) =>
      writer.bytes(8, encode$1.encode(v))
    );
  if (obj.buys?.length)
    obj.buys.forEach((v) =>
      writer.bytes(9, encode$1.encode(v))
    );
  if (obj.version) writer.varint(10, obj.version, types.uint64);
  if (obj.status) writer.varint(11, obj.status, Status);
  if (obj.reference) writer.bytes(12, obj.reference, types.string);

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }

exports.encode = encode;
