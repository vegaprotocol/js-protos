'use strict';

var Writer = require('protobuf-codec/encode/writer');
var types = require('protobuf-codec/encode/types');
var encode$1 = require('../StakeDeposited/encode.cjs');
var encode$2 = require('../StakeRemoved/encode.cjs');
var encode$3 = require('../StakeTotalSupply/encode.cjs');

/// autogenerated by protoc-plugin-js

function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer();

  if (obj.index) writer.varint(1, obj.index, types.uint64);
  if (obj.block) writer.varint(2, obj.block, types.uint64);

  if (obj.action?.stakeDeposited ?? obj.stakeDeposited)
    writer.bytes(
      1001,
      encode$1.encode(
        obj.action?.stakeDeposited ?? obj.stakeDeposited
      )
    );
  if (obj.action?.stakeRemoved ?? obj.stakeRemoved)
    writer.bytes(
      1002,
      encode$2.encode(obj.action?.stakeRemoved ?? obj.stakeRemoved)
    );
  if (obj.action?.totalSupply ?? obj.totalSupply)
    writer.bytes(
      1003,
      encode$3.encode(obj.action?.totalSupply ?? obj.totalSupply)
    );

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }

exports.encode = encode;
