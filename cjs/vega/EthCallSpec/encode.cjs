'use strict';

var Writer = require('protobuf-codec/encode/writer');
var types = require('protobuf-codec/encode/types');
var encode$1 = require('../../google/protobuf/ListValue/encode.cjs');
var encode$2 = require('../../google/protobuf/Value/encode.cjs');
var encode$3 = require('../EthCallTrigger/encode.cjs');

/// autogenerated by protoc-plugin-js

function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer();

  if (obj.address) writer.bytes(1, obj.address, types.string);
  if (obj.abi) writer.bytes(2, encode$1.encode(obj.abi));
  if (obj.method) writer.bytes(3, obj.method, types.string);
  if (obj.args?.length)
    obj.args.forEach((v) => writer.bytes(4, encode$2.encode(v)));
  if (obj.trigger) writer.bytes(5, encode$3.encode(obj.trigger));

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }

exports.encode = encode;
