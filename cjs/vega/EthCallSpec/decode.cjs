'use strict';

var reader = require('protobuf-codec/decode/reader');
var types = require('protobuf-codec/decode/types');
var decode$3 = require('../../google/protobuf/ListValue/decode.cjs');
var decode$2 = require('../../google/protobuf/Value/decode.cjs');
var decode$1 = require('../EthCallTrigger/decode.cjs');

/// autogenerated by protoc-plugin-js

function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$address = '';
  let field$abi = {};
  let field$method = '';
  const field$args = [];
  let field$trigger = {};
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$address = types.string(data);
        break

      case 2:
        field$abi = decode$3.decode(data);
        break

      case 3:
        field$method = types.string(data);
        break

      case 4:
        field$args.push(decode$2.decode(data));
        break

      case 5:
        field$trigger = decode$1.decode(data);
        break
    }
  }
  return {
    address: field$address,
    abi: field$abi,
    method: field$method,
    args: field$args,
    trigger: field$trigger
  }
}

exports.decode = decode;
