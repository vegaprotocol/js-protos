'use strict';

var Writer = require('protobuf-codec/encode/writer');
var types = require('protobuf-codec/encode/types');
var Interval = require('../Interval.cjs');

/// autogenerated by protoc-plugin-js

function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer();

  if (obj.timestamp) writer.varint(1, obj.timestamp, types.int64);
  if (obj.datetime) writer.bytes(2, obj.datetime, types.string);
  if (obj.high) writer.bytes(3, obj.high, types.string);
  if (obj.low) writer.bytes(4, obj.low, types.string);
  if (obj.open) writer.bytes(5, obj.open, types.string);
  if (obj.close) writer.bytes(6, obj.close, types.string);
  if (obj.volume) writer.varint(7, obj.volume, types.uint64);
  if (obj.interval) writer.varint(8, obj.interval, Interval);
  if (obj.notional) writer.varint(9, obj.notional, types.uint64);

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }

exports.encode = encode;
