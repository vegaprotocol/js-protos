'use strict';

var reader = require('protobuf-codec/decode/reader');
var types = require('protobuf-codec/decode/types');
var Interval = require('../Interval.cjs');

/// autogenerated by protoc-plugin-js

function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$timestamp = 0n;
  let field$datetime = '';
  let field$high = '';
  let field$low = '';
  let field$open = '';
  let field$close = '';
  let field$volume = 0n;
  let field$interval = 0;
  let field$notional = 0n;
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$timestamp = types.int64(data);
        break

      case 2:
        field$datetime = types.string(data);
        break

      case 3:
        field$high = types.string(data);
        break

      case 4:
        field$low = types.string(data);
        break

      case 5:
        field$open = types.string(data);
        break

      case 6:
        field$close = types.string(data);
        break

      case 7:
        field$volume = types.uint64(data);
        break

      case 8:
        field$interval = Interval.decode(data);
        break

      case 9:
        field$notional = types.uint64(data);
        break
    }
  }
  return {
    timestamp: field$timestamp,
    datetime: field$datetime,
    high: field$high,
    low: field$low,
    open: field$open,
    close: field$close,
    volume: field$volume,
    interval: field$interval,
    notional: field$notional
  }
}

exports.decode = decode;
