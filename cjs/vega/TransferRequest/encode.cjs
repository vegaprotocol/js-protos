'use strict';

var Writer = require('protobuf-codec/encode/writer');
var types = require('protobuf-codec/encode/types');
var encode$1 = require('../Account/encode.cjs');
var TransferType = require('../TransferType.cjs');

/// autogenerated by protoc-plugin-js

function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer();

  if (obj.fromAccount?.length)
    obj.fromAccount.forEach((v) => writer.bytes(1, encode$1.encode(v)));
  if (obj.toAccount?.length)
    obj.toAccount.forEach((v) => writer.bytes(2, encode$1.encode(v)));
  if (obj.amount) writer.bytes(3, obj.amount, types.string);
  if (obj.minAmount) writer.bytes(4, obj.minAmount, types.string);
  if (obj.asset) writer.bytes(5, obj.asset, types.string);
  if (obj.type) writer.varint(7, obj.type, TransferType);

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }

exports.encode = encode;
