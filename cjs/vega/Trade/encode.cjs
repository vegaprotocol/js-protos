'use strict';

var Writer = require('protobuf-codec/encode/writer');
var types = require('protobuf-codec/encode/types');
var Side = require('../Side.cjs');
var Type = require('./Type.cjs');
var encode$1 = require('../Fee/encode.cjs');

/// autogenerated by protoc-plugin-js

function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer();

  if (obj.id) writer.bytes(1, obj.id, types.string);
  if (obj.marketId) writer.bytes(2, obj.marketId, types.string);
  if (obj.price) writer.bytes(3, obj.price, types.string);
  if (obj.size) writer.varint(4, obj.size, types.uint64);
  if (obj.buyer) writer.bytes(5, obj.buyer, types.string);
  if (obj.seller) writer.bytes(6, obj.seller, types.string);
  if (obj.aggressor) writer.varint(7, obj.aggressor, Side);
  if (obj.buyOrder) writer.bytes(8, obj.buyOrder, types.string);
  if (obj.sellOrder) writer.bytes(9, obj.sellOrder, types.string);
  if (obj.timestamp) writer.varint(10, obj.timestamp, types.int64);
  if (obj.type) writer.varint(11, obj.type, Type);
  if (obj.buyerFee) writer.bytes(12, encode$1.encode(obj.buyerFee));
  if (obj.sellerFee) writer.bytes(13, encode$1.encode(obj.sellerFee));
  if (obj.buyerAuctionBatch) writer.varint(14, obj.buyerAuctionBatch, types.uint64);
  if (obj.sellerAuctionBatch) writer.varint(15, obj.sellerAuctionBatch, types.uint64);

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }

exports.encode = encode;
