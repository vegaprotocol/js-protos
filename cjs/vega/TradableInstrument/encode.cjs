'use strict';

var Writer = require('protobuf-codec/encode/writer');
var encode$1 = require('../Instrument/encode.cjs');
var encode$2 = require('../MarginCalculator/encode.cjs');
var encode$3 = require('../LogNormalRiskModel/encode.cjs');
var encode$4 = require('../SimpleRiskModel/encode.cjs');

/// autogenerated by protoc-plugin-js

function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer();

  if (obj.instrument) writer.bytes(1, encode$1.encode(obj.instrument));
  if (obj.marginCalculator)
    writer.bytes(2, encode$2.encode(obj.marginCalculator));

  if (obj.risk_model?.logNormalRiskModel ?? obj.logNormalRiskModel)
    writer.bytes(
      100,
      encode$3.encode(
        obj.risk_model?.logNormalRiskModel ?? obj.logNormalRiskModel
      )
    );
  if (obj.risk_model?.simpleRiskModel ?? obj.simpleRiskModel)
    writer.bytes(
      101,
      encode$4.encode(
        obj.risk_model?.simpleRiskModel ?? obj.simpleRiskModel
      )
    );

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }

exports.encode = encode;
