'use strict';

var reader = require('protobuf-codec/decode/reader');
var decode$4 = require('../Instrument/decode.cjs');
var decode$3 = require('../MarginCalculator/decode.cjs');
var decode$2 = require('../LogNormalRiskModel/decode.cjs');
var decode$1 = require('../SimpleRiskModel/decode.cjs');

/// autogenerated by protoc-plugin-js

function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$instrument = {};
  let field$marginCalculator = {};
  let field$risk_model = null;
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$instrument = decode$4.decode(data);
        break

      case 2:
        field$marginCalculator = decode$3.decode(data);
        break

      case 100:
        field$risk_model = {
          logNormalRiskModel: decode$2.decode(data)
        };
        break

      case 101:
        field$risk_model = {
          simpleRiskModel: decode$1.decode(data)
        };
        break
    }
  }
  return {
    instrument: field$instrument,
    marginCalculator: field$marginCalculator,
    risk_model: field$risk_model
  }
}

exports.decode = decode;
