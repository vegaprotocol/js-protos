'use strict';

var assert = require('nanoassert');
var types = require('protobuf-codec/encode/types');
var types$1 = require('protobuf-codec/decode/types');

/// autogenerated by protoc-plugin-js

const AUCTION_TRIGGER_UNSPECIFIED = 0;
const AUCTION_TRIGGER_BATCH = 1;
const AUCTION_TRIGGER_OPENING = 2;
const AUCTION_TRIGGER_PRICE = 3;
const AUCTION_TRIGGER_LIQUIDITY = 4;
const AUCTION_TRIGGER_LIQUIDITY_TARGET_NOT_MET = 5;
const AUCTION_TRIGGER_UNABLE_TO_DEPLOY_LP_ORDERS = 6;

const enumValues = new Map([
  [0, 'AUCTION_TRIGGER_UNSPECIFIED'],
  [1, 'AUCTION_TRIGGER_BATCH'],
  [2, 'AUCTION_TRIGGER_OPENING'],
  [3, 'AUCTION_TRIGGER_PRICE'],
  [4, 'AUCTION_TRIGGER_LIQUIDITY'],
  [5, 'AUCTION_TRIGGER_LIQUIDITY_TARGET_NOT_MET'],
  [6, 'AUCTION_TRIGGER_UNABLE_TO_DEPLOY_LP_ORDERS']
]);
const enumNames = new Map([
  ['AUCTION_TRIGGER_UNSPECIFIED', 0],
  ['AUCTION_TRIGGER_BATCH', 1],
  ['AUCTION_TRIGGER_OPENING', 2],
  ['AUCTION_TRIGGER_PRICE', 3],
  ['AUCTION_TRIGGER_LIQUIDITY', 4],
  ['AUCTION_TRIGGER_LIQUIDITY_TARGET_NOT_MET', 5],
  ['AUCTION_TRIGGER_UNABLE_TO_DEPLOY_LP_ORDERS', 6]
]);

function encode(value, buf, byteOffset = 0) {
  if (typeof value === 'string') return encode(parse(value), buf, byteOffset)
  if (value == null)
    throw new Error('Invalid AuctionTrigger value (' + value + ')')

  return types.enumerable.encode(value, buf, byteOffset)
}

function decode(varint) {
  const int = types$1.enumerable(varint);

  return stringify(int) ?? int
}

function encodingLength(value) {
  if (typeof value === 'string') return encodingLength(parse(value))
  assert(value != null, 'Invalid AuctionTrigger value (' + value + ')');

  if (0 <= value && value <= 6) return 1

  // enumerable max value in case of unknown value
  return 5
}

/**
 * Convert an enum value to it's human readable name.
 * Returns undefined on an unknown value.
 */
function stringify(int) {
  return enumValues.get(int)
}

/**
 * Convert an enum string names to it's machine integer value.
 * Returns undefined on an unknown name.
 */
function parse(str) {
  return enumNames.get(str)
}

exports.AUCTION_TRIGGER_BATCH = AUCTION_TRIGGER_BATCH;
exports.AUCTION_TRIGGER_LIQUIDITY = AUCTION_TRIGGER_LIQUIDITY;
exports.AUCTION_TRIGGER_LIQUIDITY_TARGET_NOT_MET = AUCTION_TRIGGER_LIQUIDITY_TARGET_NOT_MET;
exports.AUCTION_TRIGGER_OPENING = AUCTION_TRIGGER_OPENING;
exports.AUCTION_TRIGGER_PRICE = AUCTION_TRIGGER_PRICE;
exports.AUCTION_TRIGGER_UNABLE_TO_DEPLOY_LP_ORDERS = AUCTION_TRIGGER_UNABLE_TO_DEPLOY_LP_ORDERS;
exports.AUCTION_TRIGGER_UNSPECIFIED = AUCTION_TRIGGER_UNSPECIFIED;
exports.decode = decode;
exports.encode = encode;
exports.encodingLength = encodingLength;
exports.parse = parse;
exports.stringify = stringify;
