'use strict';

var reader = require('protobuf-codec/decode/reader');
var types = require('protobuf-codec/decode/types');
var decode$1 = require('../AccountDetails/decode.cjs');
var TransferType = require('../TransferType.cjs');

/// autogenerated by protoc-plugin-js

function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$fromAccount = {};
  let field$toAccount = {};
  let field$amount = '';
  let field$type = 0;
  let field$timestamp = 0n;
  let field$fromAccountBalance = '';
  let field$toAccountBalance = '';
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$fromAccount = decode$1.decode(data);
        break

      case 2:
        field$toAccount = decode$1.decode(data);
        break

      case 3:
        field$amount = types.string(data);
        break

      case 4:
        field$type = TransferType.decode(data);
        break

      case 5:
        field$timestamp = types.int64(data);
        break

      case 6:
        field$fromAccountBalance = types.string(data);
        break

      case 7:
        field$toAccountBalance = types.string(data);
        break
    }
  }
  return {
    fromAccount: field$fromAccount,
    toAccount: field$toAccount,
    amount: field$amount,
    type: field$type,
    timestamp: field$timestamp,
    fromAccountBalance: field$fromAccountBalance,
    toAccountBalance: field$toAccountBalance
  }
}

exports.decode = decode;
