/// autogenerated by protoc-plugin-js
import reader from 'protobuf-codec/decode/reader'
import { double, string, bool } from 'protobuf-codec/decode/types'
import * as _google_protobuf_NullValue from './../NullValue.js'
import * as _google_protobuf_Struct from './../Struct/decode.js'
import * as _google_protobuf_ListValue from './../ListValue/decode.js'

export function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$kind = null
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$kind = { nullValue: _google_protobuf_NullValue.decode(data) }
        break

      case 2:
        field$kind = { numberValue: double(data) }
        break

      case 3:
        field$kind = { stringValue: string(data) }
        break

      case 4:
        field$kind = { boolValue: bool(data) }
        break

      case 5:
        field$kind = { structValue: _google_protobuf_Struct.decode(data) }
        break

      case 6:
        field$kind = { listValue: _google_protobuf_ListValue.decode(data) }
        break
    }
  }
  return { kind: field$kind }
}
