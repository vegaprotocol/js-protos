/// autogenerated by protoc-plugin-js
import Writer from 'protobuf-codec/encode/writer'
import { string } from 'protobuf-codec/encode/types'
import * as _vega_PriceMonitoringParameters from './../PriceMonitoringParameters/encode.js'
import * as _vega_TargetStakeParameters from './../TargetStakeParameters/encode.js'
import * as _vega_SimpleModelParams from './../SimpleModelParams/encode.js'
import * as _vega_LogNormalRiskModel from './../LogNormalRiskModel/encode.js'

export function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer()

  if (obj.metadata?.length)
    obj.metadata.forEach((v) => writer.bytes(1, v, string))
  if (obj.priceMonitoringParameters)
    writer.bytes(
      2,
      _vega_PriceMonitoringParameters.encode(obj.priceMonitoringParameters)
    )
  if (obj.targetStakeParameters)
    writer.bytes(
      3,
      _vega_TargetStakeParameters.encode(obj.targetStakeParameters)
    )

  if (obj.risk_parameters?.simple ?? obj.simple)
    writer.bytes(
      100,
      _vega_SimpleModelParams.encode(obj.risk_parameters?.simple ?? obj.simple)
    )
  if (obj.risk_parameters?.logNormal ?? obj.logNormal)
    writer.bytes(
      101,
      _vega_LogNormalRiskModel.encode(
        obj.risk_parameters?.logNormal ?? obj.logNormal
      )
    )

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }
