/// autogenerated by protoc-plugin-js
import type { LiteralUnion } from 'type-fest'

export const NODE_STATUS_UNSPECIFIED = 0
export const NODE_STATUS_VALIDATOR = 1
export const NODE_STATUS_NON_VALIDATOR = 2

export type Values = 0 | 1 | 2
export type Names =
  | 'NODE_STATUS_UNSPECIFIED'
  | 'NODE_STATUS_VALIDATOR'
  | 'NODE_STATUS_NON_VALIDATOR'

export const enum NodeStatus {
  NODE_STATUS_UNSPECIFIED = 0,
  NODE_STATUS_VALIDATOR = 1,
  NODE_STATUS_NON_VALIDATOR = 2
}

declare const enumValues: Map<Names, Values>
declare const enumNames: Map<Values, Names>

export function encode(
  value: Values | Names,
  buf: Uint8Array,
  byteOffset: number
): Uint8Array

export function decode(varint: bigint): LiteralUnion<Names, number>

export function encodingLength(value: LiteralUnion<Values, number>): number

export function stringify(int: Values): LiteralUnion<Names, undefined>

export function parse(str: Names): LiteralUnion<Values, undefined>
