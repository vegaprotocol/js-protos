/// autogenerated by protoc-plugin-js
const reader = require('protobuf-codec/decode/reader')
const { string, uint64, int64 } = require('protobuf-codec/decode/types')

exports.decode = function decode(
  buf,
  byteOffset = 0,
  byteLength = buf.byteLength
) {
  let field$marketId = ''
  let field$indicativePrice = ''
  let field$indicativeVolume = 0n
  let field$auctionStart = 0n
  let field$auctionEnd = 0n
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$marketId = string(data)
        break

      case 2:
        field$indicativePrice = string(data)
        break

      case 3:
        field$indicativeVolume = uint64(data)
        break

      case 4:
        field$auctionStart = int64(data)
        break

      case 5:
        field$auctionEnd = int64(data)
        break
    }
  }
  return {
    marketId: field$marketId,
    indicativePrice: field$indicativePrice,
    indicativeVolume: field$indicativeVolume,
    auctionStart: field$auctionStart,
    auctionEnd: field$auctionEnd
  }
}
