/// autogenerated by protoc-plugin-js
const reader = require('protobuf-codec/decode/reader')
const { string, uint32 } = require('protobuf-codec/decode/types')
const _vega_ValidatorNodeStatus = require('./../ValidatorNodeStatus.js')

exports.decode = function decode(
  buf,
  byteOffset = 0,
  byteLength = buf.byteLength
) {
  let field$stakeScore = ''
  let field$performanceScore = ''
  let field$previousStatus = 0
  let field$status = 0
  let field$votingPower = 0
  let field$rankingScore = ''
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$stakeScore = string(data)
        break

      case 2:
        field$performanceScore = string(data)
        break

      case 3:
        field$previousStatus = _vega_ValidatorNodeStatus.decode(data)
        break

      case 4:
        field$status = _vega_ValidatorNodeStatus.decode(data)
        break

      case 5:
        field$votingPower = uint32(data)
        break

      case 6:
        field$rankingScore = string(data)
        break
    }
  }
  return {
    stakeScore: field$stakeScore,
    performanceScore: field$performanceScore,
    previousStatus: field$previousStatus,
    status: field$status,
    votingPower: field$votingPower,
    rankingScore: field$rankingScore
  }
}
