/// autogenerated by protoc-plugin-js
const reader = require('protobuf-codec/decode/reader')
const { string, uint64 } = require('protobuf-codec/decode/types')
const _vega_data_v1_PropertyKey_Type = require('./Type.js')

exports.decode = function decode(
  buf,
  byteOffset = 0,
  byteLength = buf.byteLength
) {
  let field$name = ''
  let field$type = 0
  let field$numberDecimalPlaces = null
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$name = string(data)
        break

      case 2:
        field$type = _vega_data_v1_PropertyKey_Type.decode(data)
        break

      case 3:
        field$numberDecimalPlaces = uint64(data)
        break
    }
  }
  return {
    name: field$name,
    type: field$type,
    numberDecimalPlaces: field$numberDecimalPlaces
  }
}
