/// autogenerated by protoc-plugin-js
import type { LiteralUnion } from 'type-fest'

export const OPERATOR_UNSPECIFIED = 0
export const OPERATOR_EQUALS = 1
export const OPERATOR_GREATER_THAN = 2
export const OPERATOR_GREATER_THAN_OR_EQUAL = 3
export const OPERATOR_LESS_THAN = 4
export const OPERATOR_LESS_THAN_OR_EQUAL = 5

export type Values = 0 | 1 | 2 | 3 | 4 | 5
export type Names =
  | 'OPERATOR_UNSPECIFIED'
  | 'OPERATOR_EQUALS'
  | 'OPERATOR_GREATER_THAN'
  | 'OPERATOR_GREATER_THAN_OR_EQUAL'
  | 'OPERATOR_LESS_THAN'
  | 'OPERATOR_LESS_THAN_OR_EQUAL'

export const enum Operator {
  OPERATOR_UNSPECIFIED = 0,
  OPERATOR_EQUALS = 1,
  OPERATOR_GREATER_THAN = 2,
  OPERATOR_GREATER_THAN_OR_EQUAL = 3,
  OPERATOR_LESS_THAN = 4,
  OPERATOR_LESS_THAN_OR_EQUAL = 5
}

declare const enumValues: Map<Names, Values>
declare const enumNames: Map<Values, Names>

export function encode(
  value: Values | Names,
  buf: Uint8Array,
  byteOffset: number
): Uint8Array

export function decode(varint: bigint): LiteralUnion<Names, number>

export function encodingLength(value: LiteralUnion<Values, number>): number

export function stringify(int: Values): LiteralUnion<Names, undefined>

export function parse(str: Names): LiteralUnion<Values, undefined>
