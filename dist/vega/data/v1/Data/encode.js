/// autogenerated by protoc-plugin-js
import Writer from 'protobuf-codec/encode/writer'
import { string, int64 } from 'protobuf-codec/encode/types'
import * as _vega_data_v1_Signer from './../Signer/encode.js'
import * as _vega_data_v1_Property from './../Property/encode.js'

export function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer()

  if (obj.signers?.length)
    obj.signers.forEach((v) => writer.bytes(1, _vega_data_v1_Signer.encode(v)))
  if (obj.data?.length)
    obj.data.forEach((v) => writer.bytes(2, _vega_data_v1_Property.encode(v)))
  if (obj.matchedSpecIds?.length)
    obj.matchedSpecIds.forEach((v) => writer.bytes(3, v, string))
  if (obj.broadcastAt) writer.varint(4, obj.broadcastAt, int64)

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }
