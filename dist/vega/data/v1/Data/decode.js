/// autogenerated by protoc-plugin-js
import reader from 'protobuf-codec/decode/reader'
import { string, int64 } from 'protobuf-codec/decode/types'
import * as _vega_data_v1_Signer from './../Signer/decode.js'
import * as _vega_data_v1_Property from './../Property/decode.js'

export function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  const field$signers = []
  const field$data = []
  const field$matchedSpecIds = []
  let field$broadcastAt = 0n
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$signers.push(_vega_data_v1_Signer.decode(data))
        break

      case 2:
        field$data.push(_vega_data_v1_Property.decode(data))
        break

      case 3:
        field$matchedSpecIds.push(string(data))
        break

      case 4:
        field$broadcastAt = int64(data)
        break
    }
  }
  return {
    signers: field$signers,
    data: field$data,
    matchedSpecIds: field$matchedSpecIds,
    broadcastAt: field$broadcastAt
  }
}
