/// autogenerated by protoc-plugin-js
import reader from 'protobuf-codec/decode/reader'
import { string } from 'protobuf-codec/decode/types'
import * as _vega_FinancialAmount from './../FinancialAmount/decode.js'
import * as _vega_TransferType from './../TransferType.js'

export function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$owner = ''
  let field$amount = {}
  let field$type = 0
  let field$minAmount = ''
  let field$marketId = ''
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$owner = string(data)
        break

      case 2:
        field$amount = _vega_FinancialAmount.decode(data)
        break

      case 3:
        field$type = _vega_TransferType.decode(data)
        break

      case 4:
        field$minAmount = string(data)
        break

      case 5:
        field$marketId = string(data)
        break
    }
  }
  return {
    owner: field$owner,
    amount: field$amount,
    type: field$type,
    minAmount: field$minAmount,
    marketId: field$marketId
  }
}
