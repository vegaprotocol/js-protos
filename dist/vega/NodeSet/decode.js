/// autogenerated by protoc-plugin-js
import reader from 'protobuf-codec/decode/reader'
import { uint32, string } from 'protobuf-codec/decode/types'

export function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$total = 0
  let field$inactive = 0
  const field$promoted = []
  const field$demoted = []
  let field$maximum = null
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$total = uint32(data)
        break

      case 2:
        field$inactive = uint32(data)
        break

      case 3:
        field$promoted.push(string(data))
        break

      case 4:
        field$demoted.push(string(data))
        break

      case 5:
        field$maximum = uint32(data)
        break
    }
  }
  return {
    total: field$total,
    inactive: field$inactive,
    promoted: field$promoted,
    demoted: field$demoted,
    maximum: field$maximum
  }
}
