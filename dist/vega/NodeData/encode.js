/// autogenerated by protoc-plugin-js
import Writer from 'protobuf-codec/encode/writer'
import { string, uint32, float } from 'protobuf-codec/encode/types'
import * as _vega_NodeSet from './../NodeSet/encode.js'

export function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer()

  if (obj.stakedTotal) writer.bytes(1, obj.stakedTotal, string)
  if (obj.totalNodes) writer.varint(2, obj.totalNodes, uint32)
  if (obj.inactiveNodes) writer.varint(3, obj.inactiveNodes, uint32)
  if (obj.tendermintNodes)
    writer.bytes(4, _vega_NodeSet.encode(obj.tendermintNodes))
  if (obj.ersatzNodes) writer.bytes(5, _vega_NodeSet.encode(obj.ersatzNodes))
  if (obj.pendingNodes) writer.bytes(6, _vega_NodeSet.encode(obj.pendingNodes))
  if (obj.uptime) writer.fixed32(7, obj.uptime, float)

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }
