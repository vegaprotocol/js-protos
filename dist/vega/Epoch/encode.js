/// autogenerated by protoc-plugin-js
const Writer = require('protobuf-codec/encode/writer')
const { uint64 } = require('protobuf-codec/encode/types')
const _vega_EpochTimestamps = require('./../EpochTimestamps/encode.js')
const _vega_Node = require('./../Node/encode.js')
const _vega_Delegation = require('./../Delegation/encode.js')

exports.encode = function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer()

  if (obj.seq) writer.varint(1, obj.seq, uint64)
  if (obj.timestamps)
    writer.bytes(2, _vega_EpochTimestamps.encode(obj.timestamps))
  if (obj.validators?.length)
    obj.validators.forEach((v) => writer.bytes(3, _vega_Node.encode(v)))
  if (obj.delegations?.length)
    obj.delegations.forEach((v) => writer.bytes(4, _vega_Delegation.encode(v)))

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }
