/// autogenerated by protoc-plugin-js
const Writer = require('protobuf-codec/encode/writer')
const { string, uint64 } = require('protobuf-codec/encode/types')
const _vega_BuiltinAsset = require('./../BuiltinAsset/encode.js')
const _vega_ERC20 = require('./../ERC20/encode.js')

exports.encode = function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer()

  if (obj.name) writer.bytes(1, obj.name, string)
  if (obj.symbol) writer.bytes(2, obj.symbol, string)
  if (obj.decimals) writer.varint(4, obj.decimals, uint64)
  if (obj.quantum) writer.bytes(5, obj.quantum, string)

  if (obj.source?.builtinAsset ?? obj.builtinAsset)
    writer.bytes(
      101,
      _vega_BuiltinAsset.encode(obj.source?.builtinAsset ?? obj.builtinAsset)
    )
  if (obj.source?.erc20 ?? obj.erc20)
    writer.bytes(102, _vega_ERC20.encode(obj.source?.erc20 ?? obj.erc20))

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }
