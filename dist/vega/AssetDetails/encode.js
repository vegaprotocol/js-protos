/// autogenerated by protoc-plugin-js
import Writer from 'protobuf-codec/encode/writer'
import { string, uint64 } from 'protobuf-codec/encode/types'
import * as _vega_BuiltinAsset from './../BuiltinAsset/encode.js'
import * as _vega_ERC20 from './../ERC20/encode.js'

export function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer()

  if (obj.name) writer.bytes(1, obj.name, string)
  if (obj.symbol) writer.bytes(2, obj.symbol, string)
  if (obj.decimals) writer.varint(4, obj.decimals, uint64)
  if (obj.quantum) writer.bytes(5, obj.quantum, string)

  if (obj.source) {
    const _o = obj.source
    if (_o.builtinAsset)
      writer.bytes(101, _vega_BuiltinAsset.encode(_o.builtinAsset))
    if (_o.erc20) writer.bytes(102, _vega_ERC20.encode(_o.erc20))
  }

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }
