/// autogenerated by protoc-plugin-js
import Writer from 'protobuf-codec/encode/writer'
import { string, int64 } from 'protobuf-codec/encode/types'
import * as _vega_Proposal_State from './State.js'
import * as _vega_ProposalTerms from './../ProposalTerms/encode.js'
import * as _vega_ProposalError from './../ProposalError.js'
import * as _vega_ProposalRationale from './../ProposalRationale/encode.js'

export function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer()

  if (obj.id) writer.bytes(1, obj.id, string)
  if (obj.reference) writer.bytes(2, obj.reference, string)
  if (obj.partyId) writer.bytes(3, obj.partyId, string)
  if (obj.state) writer.varint(4, obj.state, _vega_Proposal_State)
  if (obj.timestamp) writer.varint(5, obj.timestamp, int64)
  if (obj.terms) writer.bytes(6, _vega_ProposalTerms.encode(obj.terms))
  if (obj.reason) writer.varint(7, obj.reason, _vega_ProposalError)
  if (obj.errorDetails) writer.bytes(8, obj.errorDetails, string)
  if (obj.rationale)
    writer.bytes(9, _vega_ProposalRationale.encode(obj.rationale))
  if (obj.requiredParticipation)
    writer.bytes(10, obj.requiredParticipation, string)
  if (obj.requiredMajority) writer.bytes(11, obj.requiredMajority, string)
  if (obj.requiredLiquidityProviderParticipation)
    writer.bytes(12, obj.requiredLiquidityProviderParticipation, string)
  if (obj.requiredLiquidityProviderMajority)
    writer.bytes(13, obj.requiredLiquidityProviderMajority, string)

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }
