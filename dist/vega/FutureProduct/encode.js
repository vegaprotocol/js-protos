/// autogenerated by protoc-plugin-js
const Writer = require('protobuf-codec/encode/writer')
const { string } = require('protobuf-codec/encode/types')
const _vega_DataSourceDefinition = require('./../DataSourceDefinition/encode.js')
const _vega_DataSourceSpecToFutureBinding = require('./../DataSourceSpecToFutureBinding/encode.js')

exports.encode = function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer()

  if (obj.settlementAsset) writer.bytes(1, obj.settlementAsset, string)
  if (obj.quoteName) writer.bytes(2, obj.quoteName, string)
  if (obj.dataSourceSpecForSettlementData)
    writer.bytes(
      3,
      _vega_DataSourceDefinition.encode(obj.dataSourceSpecForSettlementData)
    )
  if (obj.dataSourceSpecForTradingTermination)
    writer.bytes(
      4,
      _vega_DataSourceDefinition.encode(obj.dataSourceSpecForTradingTermination)
    )
  if (obj.dataSourceSpecBinding)
    writer.bytes(
      5,
      _vega_DataSourceSpecToFutureBinding.encode(obj.dataSourceSpecBinding)
    )

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }
