/// autogenerated by protoc-plugin-js
import Writer from 'protobuf-codec/encode/writer'
import { uint64, string, int64 } from 'protobuf-codec/encode/types'
import * as _vega_InstrumentConfiguration from './../InstrumentConfiguration/encode.js'
import * as _vega_PriceMonitoringParameters from './../PriceMonitoringParameters/encode.js'
import * as _vega_LiquidityMonitoringParameters from './../LiquidityMonitoringParameters/encode.js'
import * as _vega_SimpleModelParams from './../SimpleModelParams/encode.js'
import * as _vega_LogNormalRiskModel from './../LogNormalRiskModel/encode.js'

export function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer()

  if (obj.instrument)
    writer.bytes(1, _vega_InstrumentConfiguration.encode(obj.instrument))
  if (obj.decimalPlaces) writer.varint(2, obj.decimalPlaces, uint64)
  if (obj.metadata?.length)
    obj.metadata.forEach((v) => writer.bytes(3, v, string))
  if (obj.priceMonitoringParameters)
    writer.bytes(
      4,
      _vega_PriceMonitoringParameters.encode(obj.priceMonitoringParameters)
    )
  if (obj.liquidityMonitoringParameters)
    writer.bytes(
      5,
      _vega_LiquidityMonitoringParameters.encode(
        obj.liquidityMonitoringParameters
      )
    )
  if (obj.positionDecimalPlaces)
    writer.varint(6, obj.positionDecimalPlaces, int64)
  if (obj.lpPriceRange) writer.bytes(8, obj.lpPriceRange, string)
  if (obj.linearSlippageFactor)
    writer.bytes(9, obj.linearSlippageFactor, string)
  if (obj.quadraticSlippageFactor)
    writer.bytes(10, obj.quadraticSlippageFactor, string)

  if (obj.risk_parameters) {
    const _o = obj.risk_parameters
    if (_o.simple) writer.bytes(100, _vega_SimpleModelParams.encode(_o.simple))
    if (_o.logNormal)
      writer.bytes(101, _vega_LogNormalRiskModel.encode(_o.logNormal))
  }

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }
