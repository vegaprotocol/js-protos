/// autogenerated by protoc-plugin-js
import assert from 'nanoassert'
import { enumerable } from 'protobuf-codec/encode/types.js'
import { enumerable as decodeEnumerable } from 'protobuf-codec/decode/types.js'

export const PROPOSAL_ERROR_UNSPECIFIED = 0
export const PROPOSAL_ERROR_CLOSE_TIME_TOO_SOON = 1
export const PROPOSAL_ERROR_CLOSE_TIME_TOO_LATE = 2
export const PROPOSAL_ERROR_ENACT_TIME_TOO_SOON = 3
export const PROPOSAL_ERROR_ENACT_TIME_TOO_LATE = 4
export const PROPOSAL_ERROR_INSUFFICIENT_TOKENS = 5
export const PROPOSAL_ERROR_INVALID_INSTRUMENT_SECURITY = 6
export const PROPOSAL_ERROR_NO_PRODUCT = 7
export const PROPOSAL_ERROR_UNSUPPORTED_PRODUCT = 8
export const PROPOSAL_ERROR_NO_TRADING_MODE = 11
export const PROPOSAL_ERROR_UNSUPPORTED_TRADING_MODE = 12
export const PROPOSAL_ERROR_NODE_VALIDATION_FAILED = 13
export const PROPOSAL_ERROR_MISSING_BUILTIN_ASSET_FIELD = 14
export const PROPOSAL_ERROR_MISSING_ERC20_CONTRACT_ADDRESS = 15
export const PROPOSAL_ERROR_INVALID_ASSET = 16
export const PROPOSAL_ERROR_INCOMPATIBLE_TIMESTAMPS = 17
export const PROPOSAL_ERROR_NO_RISK_PARAMETERS = 18
export const PROPOSAL_ERROR_NETWORK_PARAMETER_INVALID_KEY = 19
export const PROPOSAL_ERROR_NETWORK_PARAMETER_INVALID_VALUE = 20
export const PROPOSAL_ERROR_NETWORK_PARAMETER_VALIDATION_FAILED = 21
export const PROPOSAL_ERROR_OPENING_AUCTION_DURATION_TOO_SMALL = 22
export const PROPOSAL_ERROR_OPENING_AUCTION_DURATION_TOO_LARGE = 23
export const PROPOSAL_ERROR_COULD_NOT_INSTANTIATE_MARKET = 25
export const PROPOSAL_ERROR_INVALID_FUTURE_PRODUCT = 26
export const PROPOSAL_ERROR_INVALID_RISK_PARAMETER = 30
export const PROPOSAL_ERROR_MAJORITY_THRESHOLD_NOT_REACHED = 31
export const PROPOSAL_ERROR_PARTICIPATION_THRESHOLD_NOT_REACHED = 32
export const PROPOSAL_ERROR_INVALID_ASSET_DETAILS = 33
export const PROPOSAL_ERROR_UNKNOWN_TYPE = 34
export const PROPOSAL_ERROR_UNKNOWN_RISK_PARAMETER_TYPE = 35
export const PROPOSAL_ERROR_INVALID_FREEFORM = 36
export const PROPOSAL_ERROR_INSUFFICIENT_EQUITY_LIKE_SHARE = 37
export const PROPOSAL_ERROR_INVALID_MARKET = 38
export const PROPOSAL_ERROR_TOO_MANY_MARKET_DECIMAL_PLACES = 39
export const PROPOSAL_ERROR_TOO_MANY_PRICE_MONITORING_TRIGGERS = 40
export const PROPOSAL_ERROR_ERC20_ADDRESS_ALREADY_IN_USE = 41
export const PROPOSAL_ERROR_LP_PRICE_RANGE_NONPOSITIVE = 42
export const PROPOSAL_ERROR_LP_PRICE_RANGE_TOO_LARGE = 43
export const PROPOSAL_ERROR_LINEAR_SLIPPAGE_FACTOR_OUT_OF_RANGE = 44
export const PROPOSAL_ERROR_QUADRATIC_SLIPPAGE_FACTOR_OUT_OF_RANGE = 45

const enumValues = new Map([
  [0, 'PROPOSAL_ERROR_UNSPECIFIED'],
  [1, 'PROPOSAL_ERROR_CLOSE_TIME_TOO_SOON'],
  [2, 'PROPOSAL_ERROR_CLOSE_TIME_TOO_LATE'],
  [3, 'PROPOSAL_ERROR_ENACT_TIME_TOO_SOON'],
  [4, 'PROPOSAL_ERROR_ENACT_TIME_TOO_LATE'],
  [5, 'PROPOSAL_ERROR_INSUFFICIENT_TOKENS'],
  [6, 'PROPOSAL_ERROR_INVALID_INSTRUMENT_SECURITY'],
  [7, 'PROPOSAL_ERROR_NO_PRODUCT'],
  [8, 'PROPOSAL_ERROR_UNSUPPORTED_PRODUCT'],
  [11, 'PROPOSAL_ERROR_NO_TRADING_MODE'],
  [12, 'PROPOSAL_ERROR_UNSUPPORTED_TRADING_MODE'],
  [13, 'PROPOSAL_ERROR_NODE_VALIDATION_FAILED'],
  [14, 'PROPOSAL_ERROR_MISSING_BUILTIN_ASSET_FIELD'],
  [15, 'PROPOSAL_ERROR_MISSING_ERC20_CONTRACT_ADDRESS'],
  [16, 'PROPOSAL_ERROR_INVALID_ASSET'],
  [17, 'PROPOSAL_ERROR_INCOMPATIBLE_TIMESTAMPS'],
  [18, 'PROPOSAL_ERROR_NO_RISK_PARAMETERS'],
  [19, 'PROPOSAL_ERROR_NETWORK_PARAMETER_INVALID_KEY'],
  [20, 'PROPOSAL_ERROR_NETWORK_PARAMETER_INVALID_VALUE'],
  [21, 'PROPOSAL_ERROR_NETWORK_PARAMETER_VALIDATION_FAILED'],
  [22, 'PROPOSAL_ERROR_OPENING_AUCTION_DURATION_TOO_SMALL'],
  [23, 'PROPOSAL_ERROR_OPENING_AUCTION_DURATION_TOO_LARGE'],
  [25, 'PROPOSAL_ERROR_COULD_NOT_INSTANTIATE_MARKET'],
  [26, 'PROPOSAL_ERROR_INVALID_FUTURE_PRODUCT'],
  [30, 'PROPOSAL_ERROR_INVALID_RISK_PARAMETER'],
  [31, 'PROPOSAL_ERROR_MAJORITY_THRESHOLD_NOT_REACHED'],
  [32, 'PROPOSAL_ERROR_PARTICIPATION_THRESHOLD_NOT_REACHED'],
  [33, 'PROPOSAL_ERROR_INVALID_ASSET_DETAILS'],
  [34, 'PROPOSAL_ERROR_UNKNOWN_TYPE'],
  [35, 'PROPOSAL_ERROR_UNKNOWN_RISK_PARAMETER_TYPE'],
  [36, 'PROPOSAL_ERROR_INVALID_FREEFORM'],
  [37, 'PROPOSAL_ERROR_INSUFFICIENT_EQUITY_LIKE_SHARE'],
  [38, 'PROPOSAL_ERROR_INVALID_MARKET'],
  [39, 'PROPOSAL_ERROR_TOO_MANY_MARKET_DECIMAL_PLACES'],
  [40, 'PROPOSAL_ERROR_TOO_MANY_PRICE_MONITORING_TRIGGERS'],
  [41, 'PROPOSAL_ERROR_ERC20_ADDRESS_ALREADY_IN_USE'],
  [42, 'PROPOSAL_ERROR_LP_PRICE_RANGE_NONPOSITIVE'],
  [43, 'PROPOSAL_ERROR_LP_PRICE_RANGE_TOO_LARGE'],
  [44, 'PROPOSAL_ERROR_LINEAR_SLIPPAGE_FACTOR_OUT_OF_RANGE'],
  [45, 'PROPOSAL_ERROR_QUADRATIC_SLIPPAGE_FACTOR_OUT_OF_RANGE']
])
const enumNames = new Map([
  ['PROPOSAL_ERROR_UNSPECIFIED', 0],
  ['PROPOSAL_ERROR_CLOSE_TIME_TOO_SOON', 1],
  ['PROPOSAL_ERROR_CLOSE_TIME_TOO_LATE', 2],
  ['PROPOSAL_ERROR_ENACT_TIME_TOO_SOON', 3],
  ['PROPOSAL_ERROR_ENACT_TIME_TOO_LATE', 4],
  ['PROPOSAL_ERROR_INSUFFICIENT_TOKENS', 5],
  ['PROPOSAL_ERROR_INVALID_INSTRUMENT_SECURITY', 6],
  ['PROPOSAL_ERROR_NO_PRODUCT', 7],
  ['PROPOSAL_ERROR_UNSUPPORTED_PRODUCT', 8],
  ['PROPOSAL_ERROR_NO_TRADING_MODE', 11],
  ['PROPOSAL_ERROR_UNSUPPORTED_TRADING_MODE', 12],
  ['PROPOSAL_ERROR_NODE_VALIDATION_FAILED', 13],
  ['PROPOSAL_ERROR_MISSING_BUILTIN_ASSET_FIELD', 14],
  ['PROPOSAL_ERROR_MISSING_ERC20_CONTRACT_ADDRESS', 15],
  ['PROPOSAL_ERROR_INVALID_ASSET', 16],
  ['PROPOSAL_ERROR_INCOMPATIBLE_TIMESTAMPS', 17],
  ['PROPOSAL_ERROR_NO_RISK_PARAMETERS', 18],
  ['PROPOSAL_ERROR_NETWORK_PARAMETER_INVALID_KEY', 19],
  ['PROPOSAL_ERROR_NETWORK_PARAMETER_INVALID_VALUE', 20],
  ['PROPOSAL_ERROR_NETWORK_PARAMETER_VALIDATION_FAILED', 21],
  ['PROPOSAL_ERROR_OPENING_AUCTION_DURATION_TOO_SMALL', 22],
  ['PROPOSAL_ERROR_OPENING_AUCTION_DURATION_TOO_LARGE', 23],
  ['PROPOSAL_ERROR_COULD_NOT_INSTANTIATE_MARKET', 25],
  ['PROPOSAL_ERROR_INVALID_FUTURE_PRODUCT', 26],
  ['PROPOSAL_ERROR_INVALID_RISK_PARAMETER', 30],
  ['PROPOSAL_ERROR_MAJORITY_THRESHOLD_NOT_REACHED', 31],
  ['PROPOSAL_ERROR_PARTICIPATION_THRESHOLD_NOT_REACHED', 32],
  ['PROPOSAL_ERROR_INVALID_ASSET_DETAILS', 33],
  ['PROPOSAL_ERROR_UNKNOWN_TYPE', 34],
  ['PROPOSAL_ERROR_UNKNOWN_RISK_PARAMETER_TYPE', 35],
  ['PROPOSAL_ERROR_INVALID_FREEFORM', 36],
  ['PROPOSAL_ERROR_INSUFFICIENT_EQUITY_LIKE_SHARE', 37],
  ['PROPOSAL_ERROR_INVALID_MARKET', 38],
  ['PROPOSAL_ERROR_TOO_MANY_MARKET_DECIMAL_PLACES', 39],
  ['PROPOSAL_ERROR_TOO_MANY_PRICE_MONITORING_TRIGGERS', 40],
  ['PROPOSAL_ERROR_ERC20_ADDRESS_ALREADY_IN_USE', 41],
  ['PROPOSAL_ERROR_LP_PRICE_RANGE_NONPOSITIVE', 42],
  ['PROPOSAL_ERROR_LP_PRICE_RANGE_TOO_LARGE', 43],
  ['PROPOSAL_ERROR_LINEAR_SLIPPAGE_FACTOR_OUT_OF_RANGE', 44],
  ['PROPOSAL_ERROR_QUADRATIC_SLIPPAGE_FACTOR_OUT_OF_RANGE', 45]
])

export function encode(value, buf, byteOffset = 0) {
  if (typeof value === 'string') return encode(parse(value), buf, byteOffset)
  if (value == null)
    throw new Error('Invalid ProposalError value (' + value + ')')

  return enumerable.encode(value, buf, byteOffset)
}

export function decode(varint) {
  const int = decodeEnumerable(varint)

  return stringify(int) ?? int
}

export function encodingLength(value) {
  if (typeof value === 'string') return encodingLength(parse(value))
  assert(value != null, 'Invalid ProposalError value (' + value + ')')

  if (0 <= value && value <= 45) return 1

  // enumerable max value in case of unknown value
  return 5
}

/**
 * Convert an enum value to it's human readable name.
 * Returns undefined on an unknown value.
 */
export function stringify(int) {
  return enumValues.get(int)
}

/**
 * Convert an enum string names to it's machine integer value.
 * Returns undefined on an unknown name.
 */
export function parse(str) {
  return enumNames.get(str)
}
