/// autogenerated by protoc-plugin-js
import reader from 'protobuf-codec/decode/reader'
import { int64 } from 'protobuf-codec/decode/types'

export function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$proposed = 0n
  let field$pending = 0n
  let field$open = 0n
  let field$close = 0n
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$proposed = int64(data)
        break

      case 2:
        field$pending = int64(data)
        break

      case 3:
        field$open = int64(data)
        break

      case 4:
        field$close = int64(data)
        break
    }
  }
  return {
    proposed: field$proposed,
    pending: field$pending,
    open: field$open,
    close: field$close
  }
}
