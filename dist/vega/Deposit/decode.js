/// autogenerated by protoc-plugin-js
import reader from 'protobuf-codec/decode/reader'
import { string, int64 } from 'protobuf-codec/decode/types'
import * as _vega_Deposit_Status from './Status.js'

export function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$id = ''
  let field$status = 0
  let field$partyId = ''
  let field$asset = ''
  let field$amount = ''
  let field$txHash = ''
  let field$creditedTimestamp = 0n
  let field$createdTimestamp = 0n
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$id = string(data)
        break

      case 2:
        field$status = _vega_Deposit_Status.decode(data)
        break

      case 3:
        field$partyId = string(data)
        break

      case 4:
        field$asset = string(data)
        break

      case 5:
        field$amount = string(data)
        break

      case 6:
        field$txHash = string(data)
        break

      case 7:
        field$creditedTimestamp = int64(data)
        break

      case 8:
        field$createdTimestamp = int64(data)
        break
    }
  }
  return {
    id: field$id,
    status: field$status,
    partyId: field$partyId,
    asset: field$asset,
    amount: field$amount,
    txHash: field$txHash,
    creditedTimestamp: field$creditedTimestamp,
    createdTimestamp: field$createdTimestamp
  }
}
