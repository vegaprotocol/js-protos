/// autogenerated by protoc-plugin-js
import reader from 'protobuf-codec/decode/reader'

import * as _vega_Proposal from './../Proposal/decode.js'
import * as _vega_Vote from './../Vote/decode.js'
import * as _vega_GovernanceData_YesPartyEntry from './YesPartyEntry/decode.js'
import * as _vega_GovernanceData_NoPartyEntry from './NoPartyEntry/decode.js'

export function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$proposal = {}
  const field$yes = []
  const field$no = []
  const field$yesParty = []
  const field$noParty = []
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$proposal = _vega_Proposal.decode(data)
        break

      case 2:
        field$yes.push(_vega_Vote.decode(data))
        break

      case 3:
        field$no.push(_vega_Vote.decode(data))
        break

      case 4:
        field$yesParty.push(_vega_GovernanceData_YesPartyEntry.decode(data))
        break

      case 5:
        field$noParty.push(_vega_GovernanceData_NoPartyEntry.decode(data))
        break
    }
  }
  return {
    proposal: field$proposal,
    yes: field$yes,
    no: field$no,
    yesParty: field$yesParty,
    noParty: field$noParty
  }
}
