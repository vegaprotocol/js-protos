/// autogenerated by protoc-plugin-js
import type { LiteralUnion } from 'type-fest'

export const TX_VERSION_UNSPECIFIED = 0
export const TX_VERSION_V2 = 2
export const TX_VERSION_V3 = 3

export type Values = 0 | 2 | 3
export type Names = 'TX_VERSION_UNSPECIFIED' | 'TX_VERSION_V2' | 'TX_VERSION_V3'

export const enum TxVersion {
  TX_VERSION_UNSPECIFIED = 0,
  TX_VERSION_V2 = 2,
  TX_VERSION_V3 = 3
}

declare const enumValues: Map<Names, Values>
declare const enumNames: Map<Values, Names>

export function encode(
  value: Values | Names,
  buf: Uint8Array,
  byteOffset: number
): Uint8Array

export function decode(varint: bigint): LiteralUnion<Names, number>

export function encodingLength(value: LiteralUnion<Values, number>): number

export function stringify(int: Values): LiteralUnion<Names, undefined>

export function parse(str: Names): LiteralUnion<Values, undefined>
