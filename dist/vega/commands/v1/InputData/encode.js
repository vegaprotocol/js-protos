/// autogenerated by protoc-plugin-js
import Writer from 'protobuf-codec/encode/writer'
import { uint64 } from 'protobuf-codec/encode/types'
import * as _vega_commands_v1_OrderSubmission from './../OrderSubmission/encode.js'
import * as _vega_commands_v1_OrderCancellation from './../OrderCancellation/encode.js'
import * as _vega_commands_v1_OrderAmendment from './../OrderAmendment/encode.js'
import * as _vega_commands_v1_WithdrawSubmission from './../WithdrawSubmission/encode.js'
import * as _vega_commands_v1_ProposalSubmission from './../ProposalSubmission/encode.js'
import * as _vega_commands_v1_VoteSubmission from './../VoteSubmission/encode.js'
import * as _vega_commands_v1_LiquidityProvisionSubmission from './../LiquidityProvisionSubmission/encode.js'
import * as _vega_commands_v1_DelegateSubmission from './../DelegateSubmission/encode.js'
import * as _vega_commands_v1_UndelegateSubmission from './../UndelegateSubmission/encode.js'
import * as _vega_commands_v1_LiquidityProvisionCancellation from './../LiquidityProvisionCancellation/encode.js'
import * as _vega_commands_v1_LiquidityProvisionAmendment from './../LiquidityProvisionAmendment/encode.js'
import * as _vega_commands_v1_Transfer from './../Transfer/encode.js'
import * as _vega_commands_v1_CancelTransfer from './../CancelTransfer/encode.js'
import * as _vega_commands_v1_AnnounceNode from './../AnnounceNode/encode.js'
import * as _vega_commands_v1_BatchMarketInstructions from './../BatchMarketInstructions/encode.js'
import * as _vega_commands_v1_StopOrdersSubmission from './../StopOrdersSubmission/encode.js'
import * as _vega_commands_v1_StopOrdersCancellation from './../StopOrdersCancellation/encode.js'
import * as _vega_commands_v1_NodeVote from './../NodeVote/encode.js'
import * as _vega_commands_v1_NodeSignature from './../NodeSignature/encode.js'
import * as _vega_commands_v1_ChainEvent from './../ChainEvent/encode.js'
import * as _vega_commands_v1_KeyRotateSubmission from './../KeyRotateSubmission/encode.js'
import * as _vega_commands_v1_StateVariableProposal from './../StateVariableProposal/encode.js'
import * as _vega_commands_v1_ValidatorHeartbeat from './../ValidatorHeartbeat/encode.js'
import * as _vega_commands_v1_EthereumKeyRotateSubmission from './../EthereumKeyRotateSubmission/encode.js'
import * as _vega_commands_v1_ProtocolUpgradeProposal from './../ProtocolUpgradeProposal/encode.js'
import * as _vega_commands_v1_IssueSignatures from './../IssueSignatures/encode.js'
import * as _vega_commands_v1_OracleDataSubmission from './../OracleDataSubmission/encode.js'

export function encode(obj = {}, buf, byteOffset = 0) {
  const writer = new Writer()

  if (obj.nonce) writer.varint(1, obj.nonce, uint64)
  if (obj.blockHeight) writer.varint(2, obj.blockHeight, uint64)

  if (obj.command?.orderSubmission ?? obj.orderSubmission)
    writer.bytes(
      1001,
      _vega_commands_v1_OrderSubmission.encode(
        obj.command?.orderSubmission ?? obj.orderSubmission
      )
    )
  if (obj.command?.orderCancellation ?? obj.orderCancellation)
    writer.bytes(
      1002,
      _vega_commands_v1_OrderCancellation.encode(
        obj.command?.orderCancellation ?? obj.orderCancellation
      )
    )
  if (obj.command?.orderAmendment ?? obj.orderAmendment)
    writer.bytes(
      1003,
      _vega_commands_v1_OrderAmendment.encode(
        obj.command?.orderAmendment ?? obj.orderAmendment
      )
    )
  if (obj.command?.withdrawSubmission ?? obj.withdrawSubmission)
    writer.bytes(
      1004,
      _vega_commands_v1_WithdrawSubmission.encode(
        obj.command?.withdrawSubmission ?? obj.withdrawSubmission
      )
    )
  if (obj.command?.proposalSubmission ?? obj.proposalSubmission)
    writer.bytes(
      1005,
      _vega_commands_v1_ProposalSubmission.encode(
        obj.command?.proposalSubmission ?? obj.proposalSubmission
      )
    )
  if (obj.command?.voteSubmission ?? obj.voteSubmission)
    writer.bytes(
      1006,
      _vega_commands_v1_VoteSubmission.encode(
        obj.command?.voteSubmission ?? obj.voteSubmission
      )
    )
  if (
    obj.command?.liquidityProvisionSubmission ??
    obj.liquidityProvisionSubmission
  )
    writer.bytes(
      1007,
      _vega_commands_v1_LiquidityProvisionSubmission.encode(
        obj.command?.liquidityProvisionSubmission ??
          obj.liquidityProvisionSubmission
      )
    )
  if (obj.command?.delegateSubmission ?? obj.delegateSubmission)
    writer.bytes(
      1008,
      _vega_commands_v1_DelegateSubmission.encode(
        obj.command?.delegateSubmission ?? obj.delegateSubmission
      )
    )
  if (obj.command?.undelegateSubmission ?? obj.undelegateSubmission)
    writer.bytes(
      1009,
      _vega_commands_v1_UndelegateSubmission.encode(
        obj.command?.undelegateSubmission ?? obj.undelegateSubmission
      )
    )
  if (
    obj.command?.liquidityProvisionCancellation ??
    obj.liquidityProvisionCancellation
  )
    writer.bytes(
      1010,
      _vega_commands_v1_LiquidityProvisionCancellation.encode(
        obj.command?.liquidityProvisionCancellation ??
          obj.liquidityProvisionCancellation
      )
    )
  if (
    obj.command?.liquidityProvisionAmendment ??
    obj.liquidityProvisionAmendment
  )
    writer.bytes(
      1011,
      _vega_commands_v1_LiquidityProvisionAmendment.encode(
        obj.command?.liquidityProvisionAmendment ??
          obj.liquidityProvisionAmendment
      )
    )
  if (obj.command?.transfer ?? obj.transfer)
    writer.bytes(
      1012,
      _vega_commands_v1_Transfer.encode(obj.command?.transfer ?? obj.transfer)
    )
  if (obj.command?.cancelTransfer ?? obj.cancelTransfer)
    writer.bytes(
      1013,
      _vega_commands_v1_CancelTransfer.encode(
        obj.command?.cancelTransfer ?? obj.cancelTransfer
      )
    )
  if (obj.command?.announceNode ?? obj.announceNode)
    writer.bytes(
      1014,
      _vega_commands_v1_AnnounceNode.encode(
        obj.command?.announceNode ?? obj.announceNode
      )
    )
  if (obj.command?.batchMarketInstructions ?? obj.batchMarketInstructions)
    writer.bytes(
      1015,
      _vega_commands_v1_BatchMarketInstructions.encode(
        obj.command?.batchMarketInstructions ?? obj.batchMarketInstructions
      )
    )
  if (obj.command?.stopOrdersSubmission ?? obj.stopOrdersSubmission)
    writer.bytes(
      1016,
      _vega_commands_v1_StopOrdersSubmission.encode(
        obj.command?.stopOrdersSubmission ?? obj.stopOrdersSubmission
      )
    )
  if (obj.command?.stopOrdersCancellation ?? obj.stopOrdersCancellation)
    writer.bytes(
      1017,
      _vega_commands_v1_StopOrdersCancellation.encode(
        obj.command?.stopOrdersCancellation ?? obj.stopOrdersCancellation
      )
    )
  if (obj.command?.nodeVote ?? obj.nodeVote)
    writer.bytes(
      2002,
      _vega_commands_v1_NodeVote.encode(obj.command?.nodeVote ?? obj.nodeVote)
    )
  if (obj.command?.nodeSignature ?? obj.nodeSignature)
    writer.bytes(
      2003,
      _vega_commands_v1_NodeSignature.encode(
        obj.command?.nodeSignature ?? obj.nodeSignature
      )
    )
  if (obj.command?.chainEvent ?? obj.chainEvent)
    writer.bytes(
      2004,
      _vega_commands_v1_ChainEvent.encode(
        obj.command?.chainEvent ?? obj.chainEvent
      )
    )
  if (obj.command?.keyRotateSubmission ?? obj.keyRotateSubmission)
    writer.bytes(
      2005,
      _vega_commands_v1_KeyRotateSubmission.encode(
        obj.command?.keyRotateSubmission ?? obj.keyRotateSubmission
      )
    )
  if (obj.command?.stateVariableProposal ?? obj.stateVariableProposal)
    writer.bytes(
      2006,
      _vega_commands_v1_StateVariableProposal.encode(
        obj.command?.stateVariableProposal ?? obj.stateVariableProposal
      )
    )
  if (obj.command?.validatorHeartbeat ?? obj.validatorHeartbeat)
    writer.bytes(
      2007,
      _vega_commands_v1_ValidatorHeartbeat.encode(
        obj.command?.validatorHeartbeat ?? obj.validatorHeartbeat
      )
    )
  if (
    obj.command?.ethereumKeyRotateSubmission ??
    obj.ethereumKeyRotateSubmission
  )
    writer.bytes(
      2008,
      _vega_commands_v1_EthereumKeyRotateSubmission.encode(
        obj.command?.ethereumKeyRotateSubmission ??
          obj.ethereumKeyRotateSubmission
      )
    )
  if (obj.command?.protocolUpgradeProposal ?? obj.protocolUpgradeProposal)
    writer.bytes(
      2009,
      _vega_commands_v1_ProtocolUpgradeProposal.encode(
        obj.command?.protocolUpgradeProposal ?? obj.protocolUpgradeProposal
      )
    )
  if (obj.command?.issueSignatures ?? obj.issueSignatures)
    writer.bytes(
      2010,
      _vega_commands_v1_IssueSignatures.encode(
        obj.command?.issueSignatures ?? obj.issueSignatures
      )
    )
  if (obj.command?.oracleDataSubmission ?? obj.oracleDataSubmission)
    writer.bytes(
      3001,
      _vega_commands_v1_OracleDataSubmission.encode(
        obj.command?.oracleDataSubmission ?? obj.oracleDataSubmission
      )
    )

  return writer.concat(buf, byteOffset)
}

// export function encodingLength (obj) {
//   throw new Error('Unimplemented')
// }
