/// autogenerated by protoc-plugin-js
import reader from 'protobuf-codec/decode/reader'
import { uint64, string } from 'protobuf-codec/decode/types'
import * as _vega_commands_v1_Signature from './../Signature/decode.js'

export function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$targetBlock = 0n
  let field$newAddress = ''
  let field$currentAddress = ''
  let field$submitterAddress = ''
  let field$ethereumSignature = {}
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$targetBlock = uint64(data)
        break

      case 2:
        field$newAddress = string(data)
        break

      case 3:
        field$currentAddress = string(data)
        break

      case 4:
        field$submitterAddress = string(data)
        break

      case 5:
        field$ethereumSignature = _vega_commands_v1_Signature.decode(data)
        break
    }
  }
  return {
    targetBlock: field$targetBlock,
    newAddress: field$newAddress,
    currentAddress: field$currentAddress,
    submitterAddress: field$submitterAddress,
    ethereumSignature: field$ethereumSignature
  }
}
