/// autogenerated by protoc-plugin-js
import reader from 'protobuf-codec/decode/reader'
import { string, int64 } from 'protobuf-codec/decode/types'
import * as _vega_PositionStatus from './../PositionStatus.js'

export function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$marketId = ''
  let field$partyId = ''
  let field$openVolume = 0n
  let field$realisedPnl = ''
  let field$unrealisedPnl = ''
  let field$averageEntryPrice = ''
  let field$updatedAt = 0n
  let field$lossSocialisationAmount = ''
  let field$positionStatus = 0
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$marketId = string(data)
        break

      case 2:
        field$partyId = string(data)
        break

      case 3:
        field$openVolume = int64(data)
        break

      case 4:
        field$realisedPnl = string(data)
        break

      case 5:
        field$unrealisedPnl = string(data)
        break

      case 6:
        field$averageEntryPrice = string(data)
        break

      case 7:
        field$updatedAt = int64(data)
        break

      case 8:
        field$lossSocialisationAmount = string(data)
        break

      case 9:
        field$positionStatus = _vega_PositionStatus.decode(data)
        break
    }
  }
  return {
    marketId: field$marketId,
    partyId: field$partyId,
    openVolume: field$openVolume,
    realisedPnl: field$realisedPnl,
    unrealisedPnl: field$unrealisedPnl,
    averageEntryPrice: field$averageEntryPrice,
    updatedAt: field$updatedAt,
    lossSocialisationAmount: field$lossSocialisationAmount,
    positionStatus: field$positionStatus
  }
}
