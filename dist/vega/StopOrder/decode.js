/// autogenerated by protoc-plugin-js
import reader from 'protobuf-codec/decode/reader'
import { string, int64 } from 'protobuf-codec/decode/types'
import * as _vega_StopOrder_ExpiryStrategy from './ExpiryStrategy.js'
import * as _vega_StopOrder_TriggerDirection from './TriggerDirection.js'
import * as _vega_StopOrder_Status from './Status.js'

export function decode(buf, byteOffset = 0, byteLength = buf.byteLength) {
  let field$id = ''
  let field$ocoLinkId = null
  let field$expiresAt = null
  let field$expiryStrategy = null
  let field$triggerDirection = 0
  let field$status = 0
  let field$createdAt = 0n
  let field$updatedAt = null
  let field$orderId = ''
  let field$partyId = ''
  let field$marketId = ''
  let field$trigger = null
  for (const [field, { data }] of reader(buf, byteOffset, byteLength)) {
    switch (field) {
      case 1:
        field$id = string(data)
        break

      case 2:
        field$ocoLinkId = string(data)
        break

      case 3:
        field$expiresAt = int64(data)
        break

      case 4:
        field$expiryStrategy = _vega_StopOrder_ExpiryStrategy.decode(data)
        break

      case 5:
        field$triggerDirection = _vega_StopOrder_TriggerDirection.decode(data)
        break

      case 6:
        field$status = _vega_StopOrder_Status.decode(data)
        break

      case 7:
        field$createdAt = int64(data)
        break

      case 8:
        field$updatedAt = int64(data)
        break

      case 9:
        field$orderId = string(data)
        break

      case 10:
        field$partyId = string(data)
        break

      case 11:
        field$marketId = string(data)
        break

      case 100:
        field$trigger = { price: string(data) }
        break

      case 101:
        field$trigger = { trailingPercentOffset: string(data) }
        break
    }
  }
  return {
    id: field$id,
    ocoLinkId: field$ocoLinkId,
    expiresAt: field$expiresAt,
    expiryStrategy: field$expiryStrategy,
    triggerDirection: field$triggerDirection,
    status: field$status,
    createdAt: field$createdAt,
    updatedAt: field$updatedAt,
    orderId: field$orderId,
    partyId: field$partyId,
    marketId: field$marketId,
    trigger: field$trigger
  }
}
